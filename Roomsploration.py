--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			local v89 = 0;
			while true do
				if (v89 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v90 = v2(v0(v30, 16));
			if v19 then
				local v121 = 0;
				local v122;
				while true do
					if (v121 == 0) then
						v122 = v5(v90, v19);
						v19 = nil;
						v121 = 1;
					end
					if (v121 == 1) then
						return v122;
					end
				end
			else
				return v90;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v91 = 0 - (1065 - (68 + 997));
			local v92;
			while true do
				if (v91 == (0 - 0)) then
					v92 = (v31 / (2 ^ (v32 - (1 - 0)))) % ((4 - (1272 - (226 + 1044))) ^ (((v33 - ((2699 - 2079) - (555 + 64))) - (v32 - (932 - (857 + 74)))) + (569 - (367 + 201))));
					return v92 - (v92 % (928 - (214 + (830 - (32 + 85)))));
				end
			end
		else
			local v93 = 0 + 0;
			local v94;
			while true do
				if ((0 + 0 + 0) == v93) then
					v94 = (879 - (282 + 595)) ^ (v32 - ((364 + 1274) - (1523 + 114)));
					return (((v31 % (v94 + v94)) >= v94) and (1 + (957 - (892 + 65)))) or (0 - 0);
				end
			end
		end
	end
	local function v21()
		local v34 = 0;
		local v35;
		while true do
			if (v34 == (2 - 1)) then
				return v35;
			end
			if (v34 == ((180 - (67 + 113)) - 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1 - (0 + 0));
				v34 = (861 - 510) - (87 + 263);
			end
		end
	end
	local function v22()
		local v36 = 0 - 0;
		local v37;
		local v38;
		while true do
			if (v36 == (0 + 0)) then
				v37, v38 = v1(v16, v18, v18 + (999 - (915 + 82)));
				v18 = v18 + 2;
				v36 = 3 - 2;
			end
			if (v36 == (953 - (802 + 150))) then
				return (v38 * (689 - (568 - 135))) + v37;
			end
		end
	end
	local function v23()
		local v39 = 1187 - ((3359 - 2290) + 118);
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v39 == (18 - (10 + 8))) then
				v40, v41, v42, v43 = v1(v16, v18, v18 + (6 - 3));
				v18 = v18 + (8 - 4);
				v39 = 1 + 0;
			end
			if (v39 == (1 - 0)) then
				return (v43 * (16642996 + 134220)) + (v42 * 65536) + (v41 * (1047 - (368 + 423))) + v40;
			end
		end
	end
	local function v24()
		local v44 = 0 - (0 - 0);
		local v45;
		local v46;
		local v47;
		local v48;
		local v49;
		local v50;
		while true do
			if (v44 == 1) then
				v47 = 443 - (416 + 26);
				v48 = (v20(v46, 1, 63 - 43) * ((1 + 1) ^ (56 - 24))) + v45;
				v44 = 440 - (145 + (1387 - 1094));
			end
			if (v44 == (433 - (44 + 386))) then
				if (v49 == 0) then
					if (v48 == (1486 - (998 + 488))) then
						return v50 * (0 + 0 + 0);
					else
						v49 = 1;
						v47 = (0 - 0) + (1747 - (760 + 987));
					end
				elseif (v49 == (2819 - (201 + 571))) then
					return ((v48 == (1138 - (116 + 1022))) and (v50 * ((4 - 3) / (0 + 0)))) or (v50 * NaN);
				end
				return v8(v50, v49 - (3734 - 2711)) * (v47 + (v48 / ((7 - 5) ^ (911 - (814 + 45)))));
			end
			if ((0 - 0) == v44) then
				v45 = v23();
				v46 = v23();
				v44 = 1 + 0;
			end
			if (v44 == (1 + 1)) then
				v49 = v20(v46, 906 - (261 + 624), 31);
				v50 = ((v20(v46, 56 - 24) == (1081 - (1020 + 60))) and -1) or 1;
				v44 = 1426 - ((2543 - (1789 + 124)) + 793);
			end
		end
	end
	local function v25(v51)
		local v52;
		if not v51 then
			v51 = v23();
			if (v51 == (0 + 0)) then
				return "";
			end
		end
		v52 = v3(v16, v18, (v18 + v51) - (767 - (745 + 21)));
		v18 = v18 + v51;
		local v53 = {};
		for v70 = 2 - 1, #v52 do
			v53[v70] = v2(v1(v3(v52, v70, v70)));
		end
		return v6(v53);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v54 = (function()
			return function(v95, v96, v97, v98, v99, v100, v101, v102)
				local v95 = (function()
					return 0;
				end)();
				local v96 = (function()
					return;
				end)();
				local v98 = (function()
					return;
				end)();
				while true do
					if (v95 == (0 + 0)) then
						local v127 = (function()
							return 0 - 0;
						end)();
						local v128 = (function()
							return;
						end)();
						while true do
							if (v127 == (0 - 0)) then
								v128 = (function()
									return 0 + 0;
								end)();
								while true do
									if (v128 ~= (0 + 0)) then
									else
										v96 = (function()
											return v97();
										end)();
										v98 = (function()
											return nil;
										end)();
										v128 = (function()
											return 1 - 0;
										end)();
									end
									if (1 ~= v128) then
									else
										v95 = (function()
											return #"]";
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v95 == #"}") then
						if (v96 == #"/") then
							v98 = (function()
								return v97() ~= 0;
							end)();
						elseif (v96 == (2 - 0)) then
							v98 = (function()
								return v99();
							end)();
						elseif (v96 == #"91(") then
							v98 = (function()
								return v100();
							end)();
						end
						v101[v102] = (function()
							return v98;
						end)();
						break;
					end
				end
				return v95, v96, v97, v98, v99, v100, v101, v102;
			end;
		end)();
		local v55 = (function()
			return function(v103, v104, v105, v106, v107, v108, v109, v110, v111)
				local v112 = (function()
					return 0 - 0;
				end)();
				local v103 = (function()
					return;
				end)();
				local v104 = (function()
					return;
				end)();
				while true do
					local v120 = (function()
						return 0 + 0;
					end)();
					while true do
						if (v120 == (1000 - (451 + 549))) then
							if (v112 == (1 + 0)) then
								local v132 = (function()
									return 0 - 0;
								end)();
								while true do
									if (0 ~= v132) then
									else
										while true do
											if ((0 + 0) == v103) then
												v104 = (function()
													return v105();
												end)();
												if (v106(v104, #"<", #"|") ~= 0) then
												else
													local v136 = (function()
														return 0 - 0;
													end)();
													local v137 = (function()
														return;
													end)();
													local v138 = (function()
														return;
													end)();
													local v139 = (function()
														return;
													end)();
													while true do
														if (v136 == (396 - (115 + 281))) then
															v137 = (function()
																return v106(v104, 1 + 1, #"xxx");
															end)();
															v138 = (function()
																return v106(v104, #".com", 13 - 7);
															end)();
															v136 = (function()
																return 1 + 0;
															end)();
														end
														if (v136 == (2 - 1)) then
															v139 = (function()
																return {v107(),v107(),nil,nil};
															end)();
															if (v137 == (867 - (550 + 317))) then
																local v1222 = (function()
																	return 0 + 0;
																end)();
																local v1223 = (function()
																	return;
																end)();
																while true do
																	if (v1222 == (0 - 0)) then
																		v1223 = (function()
																			return 0;
																		end)();
																		while true do
																			if (v1223 ~= (0 - 0)) then
																			else
																				v139[#"19("] = (function()
																					return v107();
																				end)();
																				v139[#"asd1"] = (function()
																					return v107();
																				end)();
																				break;
																			end
																		end
																		break;
																	end
																end
															elseif (v137 == #"{") then
																v139[#"19("] = (function()
																	return v108();
																end)();
															elseif (v137 == 2) then
																v139[#"xxx"] = (function()
																	return v108() - (2 ^ (44 - 28));
																end)();
															elseif (v137 == #"nil") then
																local v1381 = (function()
																	return 0;
																end)();
																local v1382 = (function()
																	return;
																end)();
																while true do
																	if (v1381 ~= (0 + 0)) then
																	else
																		v1382 = (function()
																			return 285 - (134 + 151);
																		end)();
																		while true do
																			if (v1382 == (1467 - (899 + 568))) then
																				v139[#"-19"] = (function()
																					return v108() - ((2 + 0) ^ (38 - 22));
																				end)();
																				v139[#"xnxx"] = (function()
																					return v107();
																				end)();
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															v136 = (function()
																return 605 - (268 + 335);
															end)();
														end
														if (v136 == (1668 - (970 + 695))) then
															if (v106(v138, #"asd", #"asd") ~= #"{") then
															else
																v139[#"http"] = (function()
																	return v109[v139[#"0313"]];
																end)();
															end
															v110[v111] = (function()
																return v139;
															end)();
															break;
														end
														if (v136 ~= 2) then
														else
															if (v106(v138, #"~", #" ") ~= #":") then
															else
																v139[3 - 1] = (function()
																	return v109[v139[1992 - (582 + 1408)]];
																end)();
															end
															if (v106(v138, 2, 1458 - (282 + 1174)) == #"[") then
																v139[#"asd"] = (function()
																	return v109[v139[#"19("]];
																end)();
															end
															v136 = (function()
																return 3;
															end)();
														end
													end
												end
												break;
											end
										end
										return v103, v104, v105, v106, v107, v108, v109, v110, v111;
									end
								end
							end
							if (v112 ~= (0 - 0)) then
							else
								v103 = (function()
									return 0 - 0;
								end)();
								v104 = (function()
									return nil;
								end)();
								v112 = (function()
									return 3 - 2;
								end)();
							end
							break;
						end
					end
				end
			end;
		end)();
		local v56 = (function()
			return function(v113, v114, v115)
				local v116 = (function()
					return 1824 - (1195 + 629);
				end)();
				local v117 = (function()
					return;
				end)();
				while true do
					if (v116 == (1251 - (721 + 530))) then
						v117 = (function()
							return 0 - 0;
						end)();
						while true do
							if ((241 - (187 + 54)) == v117) then
								local v133 = (function()
									return 780 - (162 + 618);
								end)();
								while true do
									if (v133 == (0 + 0)) then
										local v134 = (function()
											return 0;
										end)();
										while true do
											if (v134 == 0) then
												v113[v114 - #"|"] = (function()
													return v115();
												end)();
												return v113, v114, v115;
											end
										end
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v57 = (function()
			return {};
		end)();
		local v58 = (function()
			return {};
		end)();
		local v59 = (function()
			return {};
		end)();
		local v60 = (function()
			return {v57,v58,nil,v59};
		end)();
		local v61 = (function()
			return v23();
		end)();
		local v62 = (function()
			return {};
		end)();
		for v72 = #"[", v61 do
			FlatIdent_A36C, Type, v21, Cons, v24, v25, v62, v72 = (function()
				return v54(FlatIdent_A36C, Type, v21, Cons, v24, v25, v62, v72);
			end)();
		end
		v60[#"91("] = (function()
			return v21();
		end)();
		for v73 = #"{", v23() do
			FlatIdent_7FAC9, Descriptor, v21, v20, v22, v23, v62, v57, v73 = (function()
				return v55(FlatIdent_7FAC9, Descriptor, v21, v20, v22, v23, v62, v57, v73);
			end)();
		end
		for v74 = #"/", v23() do
			v58, v74, v28 = (function()
				return v56(v58, v74, v28);
			end)();
		end
		return v60;
	end
	local function v29(v64, v65, v66)
		local v67 = v64[1];
		local v68 = v64[(7 - 5) + 0];
		local v69 = v64[703 - (271 + 239 + 190)];
		return function(...)
			local v75 = v67;
			local v76 = v68;
			local v77 = v69;
			local v78 = v27;
			local v79 = 1 + 0;
			local v80 = -(1501 - (1408 + 92));
			local v81 = {};
			local v82 = {...};
			local v83 = v12("#", ...) - (1087 - (461 + 625));
			local v84 = {};
			local v85 = {};
			for v118 = 1288 - (993 + 295), v83 do
				if (v118 >= v77) then
					v81[v118 - v77] = v82[v118 + (1 - 0)];
				else
					v85[v118] = v82[v118 + 1];
				end
			end
			local v86 = (v83 - v77) + 1 + 0 + 0;
			local v87;
			local v88;
			while true do
				local v119 = 1171 - (418 + 753);
				while true do
					if ((3408 < 3992) and (v119 == (0 + 0))) then
						v87 = v75[v79];
						v88 = v87[1 + 0];
						v119 = 1 + 0;
					end
					if ((1 == v119) or (3541 < 2119)) then
						if ((v88 <= (8 + 2 + 24)) or (493 > 3707)) then
							if (v88 <= 16) then
								if (v88 <= (2 + 5)) then
									if ((4557 >= 2988) and (v88 <= (532 - (406 + 123)))) then
										if (v88 <= (1770 - (1749 + (75 - 55)))) then
											if (v88 == ((0 - 0) + 0)) then
												local v140;
												v140 = v87[1324 - (1249 + 73)];
												v85[v140] = v85[v140](v13(v85, v140 + 1, v87[2 + 1 + 0]));
												v79 = v79 + (1146 - (466 + 679));
												v87 = v75[v79];
												v85[v87[4 - 2]][v87[8 - 5]] = v85[v87[4]];
												v79 = v79 + (1901 - ((488 - 382) + (5930 - 4136)));
												v87 = v75[v79];
												v85[v87[1 + 1]] = v66[v87[1 + 2]];
												v79 = v79 + (2 - 1);
												v87 = v75[v79];
												v85[v87[5 - 3]] = v85[v87[117 - (4 + 110)]][v87[588 - (57 + 527)]];
												v79 = v79 + (1428 - (41 + 1386));
												v87 = v75[v79];
												v85[v87[105 - (17 + 36 + 50)]] = v87[3 + 0];
												v79 = v79 + ((4 - 3) - 0);
												v87 = v75[v79];
												v85[v87[2]] = v87[3];
												v79 = v79 + (2 - 1);
												v87 = v75[v79];
												v85[v87[168 - (122 + 44)]] = v87[5 - (833 - (762 + 69))];
												v79 = v79 + (3 - 2);
												v87 = v75[v79];
												v85[v87[2 + 0]] = v87[(3 - 2) + 2];
												v79 = v79 + (1 - 0);
												v87 = v75[v79];
												v140 = v87[2];
												v85[v140] = v85[v140](v13(v85, v140 + ((57 + 9) - (20 + 10 + 35)), v87[3 + 0]));
												v79 = v79 + (1258 - (1043 + 214));
												v87 = v75[v79];
												v85[v87[7 - 5]][v87[3]] = v85[v87[1216 - (323 + 889)]];
											else
												local v161;
												v85[v87[5 - 3]] = v85[v87[583 - (361 + 219)]][v87[4]];
												v79 = v79 + (321 - (53 + 267));
												v87 = v75[v79];
												v85[v87[4 - 2]] = v85[v87[1 + 2]][v87[417 - (15 + 398)]];
												v79 = v79 + (983 - (18 + 304 + 660));
												v87 = v75[v79];
												v85[v87[7 - 5]] = v66[v87[2 + 1]];
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[2 + 0]] = v85[v87[853 - (1 + 19 + 830)]][v87[4 + 0]];
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[128 - (116 + (38 - 28))]] = v85[v87[3]];
												v79 = v79 + 1 + 0;
												v87 = v75[v79];
												v161 = v87[740 - (542 + 196)];
												v85[v161] = v85[v161](v85[v161 + (1 - 0)]);
												v79 = v79 + 1 + 0;
												v87 = v75[v79];
												v85[v87[2 + 0]][v87[2 + 1]] = v85[v87[10 - 6]];
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[4 - 2]] = v66[v87[3]];
												v79 = v79 + (1552 - (1126 + 425));
												v87 = v75[v79];
												v85[v87[407 - ((275 - (8 + 149)) + (1607 - (1199 + 121)))]] = v85[v87[11 - 8]];
												v79 = v79 + (1122 - (118 + 1003));
												v87 = v75[v79];
												v161 = v87[2];
												v85[v161](v85[v161 + ((3 - 1) - 1)]);
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[379 - (142 + 235)]] = v87[13 - 10] ~= 0;
												v79 = v79 + 1 + 0;
												v87 = v75[v79];
												v79 = v87[(2212 - 1232) - (553 + 175 + 249)];
											end
										elseif (v88 > (3 - 1)) then
											local v183 = v87[(6 - 4) + 0];
											v85[v183] = v85[v183](v13(v85, v183 + 1 + 0, v87[2 + 1]));
										else
											local v185 = 0 + 0;
											local v186;
											while true do
												if ((v185 == 1) or (2825 == 3131)) then
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v85[v87[2 + 0]] = v85[v87[6 - (3 + 0)]][v87[11 - 7]];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v85[v87[1 + 1]] = v87[14 - 11];
													v185 = 2;
												end
												if ((3702 > 1244) and (((2565 - (518 + 1289)) - (239 + 514)) == v185)) then
													v85[v87[1 + (1 - 0)]] = v87[3];
													break;
												end
												if (v185 == 4) then
													v85[v87[2]] = v87[3];
													v79 = v79 + (1330 - (797 + 532));
													v87 = v75[v79];
													v85[v87[2 + 0 + 0]] = v87[2 + 1];
													v79 = v79 + (2 - (1 - 0));
													v87 = v75[v79];
													v185 = 1207 - (373 + 829);
												end
												if (v185 == (733 - (476 + 255))) then
													v79 = v79 + (1131 - (369 + 761));
													v87 = v75[v79];
													v186 = v87[2 + 0];
													v85[v186] = v85[v186](v85[v186 + 1 + 0]);
													v79 = v79 + (470 - (304 + 165));
													v87 = v75[v79];
													v185 = 5 - 2;
												end
												if ((1053 <= 2012) and (v185 == (5 - 2))) then
													v85[v87[2 + 0]] = v66[v87[241 - (64 + (334 - (54 + 106)))]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2 - 0]] = v85[v87[339 - (144 + (2161 - (1618 + 351)))]][v87[220 - (42 + 174)]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v185 = 4;
												end
												if ((v185 == 0) or (4453 >= 4963)) then
													v186 = nil;
													v186 = v87[2 + 0];
													v85[v186](v13(v85, v186 + 1 + 0, v87[3]));
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2]] = v66[v87[1507 - (363 + 1141)]];
													v185 = 1581 - (1183 + 397);
												end
											end
										end
									elseif (v88 <= (15 - (8 + 2))) then
										if ((v88 == (3 + 1)) or (3904 == 4817)) then
											if (v87[2 + 0] == v85[v87[4]]) then
												v79 = v79 + (1976 - (1913 + 62));
											else
												v79 = v87[2 + 1];
											end
										else
											local v187 = 0;
											local v188;
											local v189;
											while true do
												if ((23 - 14) == v187) then
													v85[v87[1935 - (565 + 1368)]] = v66[v87[11 - (1024 - (10 + 1006))]];
													v79 = v79 + (1662 - (371 + 1106 + 184));
													v87 = v75[v79];
													v85[v87[2 - 0]] = v85[v87[3 + 0]][v87[860 - (564 + 292)]];
													v79 = v79 + (1 - (0 + 0));
													v87 = v75[v79];
													v85[v87[5 - 3]] = v87[307 - (244 + 60)];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v187 = 486 - (41 + 435);
												end
												if (v187 == 18) then
													v87 = v75[v79];
													v85[v87[1003 - (938 + 63)]][v87[3 + 0]] = v85[v87[1129 - (936 + 189)]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[1615 - (1565 + 48)]] = v66[v87[2 + 1]];
													v79 = v79 + (1139 - (782 + 356));
													v87 = v75[v79];
													v85[v87[269 - (176 + 91)]] = v85[v87[9 - 6]][v87[4]];
													v79 = v79 + ((1035 - (912 + 121)) - (1 + 0));
													v187 = 1308 - (1140 + 149);
												end
												if (v187 == (8 - 2)) then
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[(701 + 393) - (975 + 117)]] = v66[v87[1878 - (157 + 1718)]];
													v79 = v79 + (1 - 0) + 0;
													v87 = v75[v79];
													v85[v87[6 - 4]] = v85[v87[10 - 7]][v87[1022 - (697 + 321)]];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v85[v87[3 - 1]] = v87[3];
													v187 = 15 - 8;
												end
												if (v187 == (1 + 1)) then
													v85[v87[3 - 1]] = v66[v87[7 - 4]];
													v79 = v79 + (1228 - (322 + 905));
													v87 = v75[v79];
													v85[v87[613 - (602 + 9)]] = v85[v87[1192 - (449 + 740)]][v87[4]];
													v79 = v79 + ((163 + 710) - (826 + 46));
													v87 = v75[v79];
													v85[v87[949 - (245 + 702)]] = v85[v87[9 - 6]][v87[(6 - 4) + 2]];
													v79 = v79 + (1899 - (260 + 1638));
													v87 = v75[v79];
													v187 = 443 - (382 + 58);
												end
												if (v187 == (89 - 61)) then
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[3 - 1]] = v66[v87[8 - 5]];
													break;
												end
												if (v187 == (1212 - (902 + 303))) then
													v79 = v79 + ((1 - 0) - 0);
													v87 = v75[v79];
													v85[v87[4 - 2]] = v87[1 + 2];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[2]] = v87[1693 - (1121 + 569)];
													v79 = v79 + ((38 + 177) - (22 + 192));
													v87 = v75[v79];
													v85[v87[685 - (483 + 200)]] = v87[1466 - (1404 + 59)];
													v187 = 21 - 13;
												end
												if ((v187 == 27) or (1399 > 1549)) then
													v87 = v75[v79];
													v189 = v87[2];
													v85[v189] = v85[v189](v13(v85, v189 + (1 - 0), v87[3]));
													v79 = v79 + (766 - (468 + 297));
													v87 = v75[v79];
													v85[v87[564 - (334 + 228)]][v87[10 - 7]] = v85[v87[8 - 4]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[2 - 0]][v87[1 + 2]] = v87[240 - ((489 - 348) + 95)];
													v187 = 28 + 0;
												end
												if ((3876 == 3876) and (13 == v187)) then
													v87 = v75[v79];
													v85[v87[2]] = v87[7 - 4];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v189 = v87[2];
													v85[v189] = v85[v189](v13(v85, v189 + 1 + 0, v87[189 - (165 + 21)]));
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[(116 - (61 + 50)) - 3]][v87[3 + 0]] = v85[v87[3 + 1]];
													v187 = 19 - 5;
												end
												if (20 == v187) then
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2]] = v85[v87[2 + 1]][v87[167 - (92 + 71)]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2 - 0]] = v87[3];
													v79 = v79 + (766 - (574 + 191));
													v87 = v75[v79];
													v85[v87[2 + 0]] = v87[3];
													v187 = (247 - 195) - 31;
												end
												if ((1 + 0) == v187) then
													v79 = v79 + 1;
													v87 = v75[v79];
													v189 = v87[2];
													v85[v189] = v85[v189](v85[v189 + (850 - (254 + 595))]);
													v79 = v79 + (127 - (55 + 71));
													v87 = v75[v79];
													v85[v87[2]][v87[3 - 0]] = v87[(3614 - 1820) - (573 + 1217)];
													v79 = v79 + 1;
													v87 = v75[v79];
													v187 = 5 - 3;
												end
												if (v187 == (1 + 4 + 6)) then
													v189 = v87[2 - 0];
													v85[v189] = v85[v189](v13(v85, v189 + 1, v87[942 - ((2174 - (1295 + 165)) + 225)]));
													v79 = v79 + (2 - (1 + 0));
													v87 = v75[v79];
													v85[v87[2]][v87[3]] = v85[v87[5 - 1]];
													v79 = v79 + 1 + 0 + (1397 - (819 + 578));
													v87 = v75[v79];
													v85[v87[2 - 0]] = v66[v87[809 - (118 + (2090 - (331 + 1071)))]];
													v79 = v79 + 1;
													v187 = (803 - (588 + 155)) - ((1307 - (546 + 736)) + 23);
												end
												if (v187 == (5 + 17)) then
													v85[v189] = v85[v189](v13(v85, v189 + (1887 - (927 + 959)), v87[1940 - (1834 + 103)]));
													v79 = v79 + (3 - 2);
													v87 = v75[v79];
													v85[v87[734 - (16 + 716)]][v87[5 - (2 + 0)]] = v85[v87[101 - ((32 - 21) + 86)]];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v85[v87[287 - (175 + 110)]] = v66[v87[6 - 3]];
													v79 = v79 + (1767 - (1536 + 230));
													v87 = v75[v79];
													v187 = 113 - 90;
												end
												if (v187 == 4) then
													v189 = v87[(2289 - (128 + 363)) - (503 + 1293)];
													v85[v189] = v85[v189](v13(v85, v189 + ((1 + 1) - 1), v87[(7 - 4) + 0]));
													v79 = v79 + (1062 - (810 + 251));
													v87 = v75[v79];
													v85[v87[2]][v87[3]] = v85[v87[3 + 1]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[1 + 1]] = v66[v87[3]];
													v79 = v79 + 1 + 0;
													v187 = 538 - ((70 - 27) + 490);
												end
												if ((v187 == (758 - (711 + 22))) or (1145 > 2264)) then
													v87 = v75[v79];
													v85[v87[7 - 5]][v87[862 - (240 + 619)]] = v85[v87[4]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2 - 0]] = v66[v87[1 + 2]];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v85[v87[2]] = v85[v87[1747 - ((3264 - 1920) + 400)]][v87[409 - (255 + 150)]];
													v79 = v79 + 1;
													v187 = 21 + 5;
												end
												if (v187 == (14 + 12)) then
													v87 = v75[v79];
													v85[v87[2]] = v87[12 - (7 + 2)];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[2]] = v87[9 - 6];
													v79 = v79 + (1740 - ((1413 - (615 + 394)) + 1335));
													v87 = v75[v79];
													v85[v87[2]] = v87[409 - (183 + 202 + 21)];
													v79 = v79 + (1 - 0);
													v187 = 18 + 0 + 9;
												end
												if (v187 == ((15 - 10) + 7)) then
													v87 = v75[v79];
													v85[v87[2]] = v85[v87[(1542 - 1202) - (10 + 327)]][v87[(654 - (59 + 592)) + (2 - 1)]];
													v79 = v79 + ((623 - 284) - (118 + 220));
													v87 = v75[v79];
													v85[v87[1 + 1]] = v87[452 - (108 + 341)];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[8 - 6]] = v87[1496 - (711 + 782)];
													v79 = v79 + (1 - (0 + 0));
													v187 = 482 - ((441 - (70 + 101)) + 199);
												end
												if (v187 == (7 + 14)) then
													v79 = v79 + (1820 - (580 + 1239));
													v87 = v75[v79];
													v85[v87[5 - 3]] = v87[3];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[1 + 1]] = v87[2 + 1];
													v79 = v79 + 1;
													v87 = v75[v79];
													v189 = v87[4 - 2];
													v187 = 14 + 8;
												end
												if ((v187 == (1177 - ((1594 - 949) + 522))) or (3537 > 4581)) then
													v85[v87[2]] = v87[3 + 0];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[1792 - (1010 + (1959 - 1179))]] = v87[3 + 0];
													v79 = v79 + (4 - 3);
													v87 = v75[v79];
													v85[v87[2]] = v87[3];
													v79 = v79 + (2 - (242 - (123 + 118)));
													v87 = v75[v79];
													v187 = 1847 - (1045 + 791);
												end
												if (((5 + 14) - (1 + 10)) == v187) then
													v79 = v79 + (1 - 0);
													v87 = v75[v79];
													v189 = v87[507 - (351 + 154)];
													v85[v189] = v85[v189](v13(v85, v189 + 1, v87[1577 - (1281 + 293)]));
													v79 = v79 + (267 - (28 + 238));
													v87 = v75[v79];
													v85[v87[4 - 2]][v87[1562 - (1381 + 178)]] = v85[v87[4 + (1399 - (653 + 746))]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v187 = 4 + 5;
												end
												if ((65 - 46) == v187) then
													v87 = v75[v79];
													v85[v87[2 + 0]] = v87[3];
													v79 = v79 + (471 - (381 + 89));
													v87 = v75[v79];
													v189 = v87[2];
													v85[v189] = v85[v189](v85[v189 + 1 + 0]);
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2 - 0]] = v66[v87[1159 - (1074 + 82)]];
													v187 = 43 - 23;
												end
												if (v187 == (1800 - (214 + 1570))) then
													v85[v87[1457 - (990 + 465)]] = v66[v87[2 + (1 - 0)]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[1 + 1]] = v85[v87[3 + 0]][v87[15 - (15 - 4)]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[1728 - (1668 + 58)]] = v87[(1683 - 1054) - (512 + 114)];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v187 = 17;
												end
												if ((4149 >= 510) and (v187 == (30 - (7 + 8)))) then
													v79 = v79 + (3 - 2);
													v87 = v75[v79];
													v85[v87[1 + 0 + 1]] = v87[1 + 2];
													v79 = v79 + 1;
													v87 = v75[v79];
													v189 = v87[2 + 0];
													v85[v189] = v85[v189](v85[v189 + (3 - 2)]);
													v79 = v79 + 1;
													v87 = v75[v79];
													v187 = 2010 - (109 + 1885);
												end
												if (v187 == 14) then
													v79 = v79 + (1470 - (1269 + 175 + 25));
													v87 = v75[v79];
													v85[v87[3 - 1]][v87[3]] = v85[v87[819 - (98 + 717)]];
													v79 = v79 + ((102 + 725) - (802 + 24));
													v87 = v75[v79];
													v85[v87[2 - 0]] = v66[v87[3 - 0]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[1 + 1]] = v85[v87[3]][v87[4]];
													v187 = 12 + 3;
												end
												if (v187 == (4 + 3 + 16)) then
													v85[v87[(2 - 1) + 1]] = v85[v87[8 - 5]][v87[13 - (9 + 0)]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2]] = v87[(3 - 1) + 1];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2 + 0]] = v87[2 + 1];
													v79 = v79 + (1434 - (797 + 636));
													v87 = v75[v79];
													v187 = 116 - (1326 - (885 + 349));
												end
												if ((v187 == 24) or (1472 >= 3492)) then
													v85[v87[2]] = v87[1622 - (1427 + 192)];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[2]] = v87[2 + 1];
													v79 = v79 + 1;
													v87 = v75[v79];
													v189 = v87[2];
													v85[v189] = v85[v189](v13(v85, v189 + (2 - 1), v87[3]));
													v79 = v79 + 1 + 0;
													v187 = 25;
												end
												if (v187 == (0 + 0)) then
													v188 = nil;
													v189 = nil;
													v85[v87[328 - (192 + 134)]] = v66[v87[1279 - (316 + 960)]];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2 + 0]] = v85[v87[3 + 0]][v87[15 - 11]];
													v79 = v79 + (552 - (83 + 468));
													v87 = v75[v79];
													v85[v87[2]] = v87[1809 - (955 + 247 + 604)];
													v187 = 1;
												end
												if ((v187 == (79 - 62)) or (130 >= 1901)) then
													v85[v87[2 - 0]] = v87[8 - 5];
													v79 = v79 + (326 - (45 + 280));
													v87 = v75[v79];
													v189 = v87[(4 - 2) + 0];
													v85[v189] = v85[v189](v13(v85, v189 + 1, v87[3]));
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v85[v87[2]][v87[(5 - 3) + 1]] = v85[v87[4]];
													v79 = v79 + 1;
													v187 = 10 + 8;
												end
												if (((1 + 2) == v187) or (2562 >= 3765)) then
													v189 = v87[3 - 1];
													v188 = v85[v87[1914 - (340 + 1571)]];
													v85[v189 + 1 + 0] = v188;
													v85[v189] = v188[v87[1776 - ((2701 - (915 + 53)) + 39)]];
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v85[v87[(1837 - (768 + 33)) - ((478 - 353) + 909)]] = v87[1951 - (1096 + 852)];
													v79 = v79 + 1 + 0;
													v87 = v75[v79];
													v187 = 6 - 2;
												end
												if (v187 == ((334 - (287 + 41)) - 1)) then
													v87 = v75[v79];
													v85[v87[2 + 0]] = v85[v87[515 - (409 + 103)]][v87[240 - (46 + 190)]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v85[v87[2]] = v87[98 - (51 + 44)];
													v79 = v79 + 1;
													v87 = v75[v79];
													v189 = v87[1 + 1];
													v85[v189] = v85[v189](v85[v189 + 1]);
													v187 = 1323 - (1114 + 203);
												end
											end
										end
									elseif (v88 > 6) then
										v85[v87[2]] = v85[v87[3]] - v85[v87[730 - (228 + (1345 - (638 + 209)))]];
									else
										local v191;
										v191 = v87[2];
										v85[v191] = v85[v191](v13(v85, v191 + 1 + 0, v87[2 + 1 + 0]));
										v79 = v79 + (664 - (174 + 489));
										v87 = v75[v79];
										v85[v87[5 - 3]][v87[1908 - (830 + 1075)]] = v85[v87[528 - ((1989 - (96 + 1590)) + 221)]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1271 - (231 + 1038)]] = v66[v87[3]];
										v79 = v79 + (1673 - (741 + 931)) + 0;
										v87 = v75[v79];
										v85[v87[1164 - (171 + 991)]] = v85[v87[12 - 9]][v87[10 - 6]];
										v79 = v79 + ((1 + 1) - (2 - 1));
										v87 = v75[v79];
										v85[v87[2 + 0]] = v87[10 - 7];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[2]] = v87[4 - 1];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[6 - 4]] = v87[(5844 - 4593) - (111 + 1137)];
										v79 = v79 + (159 - (40 + 51 + 67));
										v87 = v75[v79];
										v85[v87[5 - 3]] = v87[2 + 1];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v191 = v87[2];
										v85[v191] = v85[v191](v13(v85, v191 + 1 + 0, v87[526 - (423 + 100)]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[5 - 3]][v87[2 + 1]] = v85[v87[4]];
									end
								elseif ((v88 <= (782 - (326 + (1688 - 1243)))) or (1675 < 309)) then
									if (v88 <= (39 - 30)) then
										if ((2905 >= 966) and (v88 == (17 - 9))) then
											local v211 = 0 - 0;
											local v212;
											local v213;
											while true do
												if (v211 == ((232 + 481) - (530 + 181))) then
													v79 = v79 + (882 - (614 + 267));
													v87 = v75[v79];
													v213 = v87[(17 + 17) - (19 + 13)];
													v85[v213](v13(v85, v213 + (1 - (0 - 0)), v87[6 - 3]));
													v79 = v79 + (2 - 1);
													v87 = v75[v79];
													v211 = 1 + 2;
												end
												if (v211 == (6 - 2)) then
													v85[v87[2]] = v87[6 - 3];
													v79 = v79 + (1813 - (1293 + 519));
													v87 = v75[v79];
													v213 = v87[3 - 1];
													v85[v213] = v85[v213](v85[v213 + (2 - 1)]);
													v79 = v79 + 1;
													v211 = 9 - 4;
												end
												if ((2250 > 1570) and (v211 == (12 - 9))) then
													v85[v87[4 - 2]] = v66[v87[3]];
													v79 = v79 + 1 + 0 + 0;
													v87 = v75[v79];
													v85[v87[1 + 1]] = v85[v87[6 - 3]][v87[1 + 3]];
													v79 = v79 + (495 - (64 + 430)) + 0;
													v87 = v75[v79];
													v211 = 3 + 0 + 1;
												end
												if ((2723 == 2723) and (v211 == 1)) then
													v212 = v85[v87[1099 - ((1072 - (106 + 257)) + 387)]];
													v85[v213 + 1] = v212;
													v85[v213] = v212[v87[4]];
													v79 = v79 + ((1318 + 541) - (673 + 1185));
													v87 = v75[v79];
													v85[v87[5 - (724 - (496 + 225))]] = v85[v87[9 - 6]];
													v211 = 2 - 0;
												end
												if (v211 == (4 + 1)) then
													v87 = v75[v79];
													v85[v87[2]] = v66[v87[(5 - 2) + 0]];
													v79 = v79 + (1 - 0);
													v87 = v75[v79];
													v85[v87[1 + 1]] = v85[v87[5 - 2]][v87[4]];
													break;
												end
												if (v211 == (0 - 0)) then
													v212 = nil;
													v213 = nil;
													v85[v87[1882 - (446 + 1434)]] = v85[v87[1286 - (1040 + 243)]][v87[11 - 7]];
													v79 = v79 + 1;
													v87 = v75[v79];
													v213 = v87[1849 - (559 + 1288)];
													v211 = 1932 - (609 + 1322);
												end
											end
										else
											v79 = v87[14 - 11];
										end
									elseif ((v88 > (464 - (13 + 441))) or (2135 <= 263)) then
										v85[v87[1660 - (256 + 1402)]][v87[10 - 7]] = v85[v87[4]];
									else
										local v217 = (1899 - (30 + 1869)) - 0;
										local v218;
										local v219;
										local v220;
										while true do
											if ((2020 == 2020) and ((0 - 0) == v217)) then
												v218 = v76[v87[1 + 2]];
												v219 = nil;
												v217 = 3 - 2;
											end
											if ((1 + 1) == v217) then
												for v1227 = 1 + 0, v87[4] do
													v79 = v79 + (2 - 1);
													local v1228 = v75[v79];
													if (v1228[1] == (23 + 19)) then
														v220[v1227 - (1 - 0)] = {v85,v1228[3]};
													else
														v220[v1227 - (1 + 0)] = {v65,v1228[3]};
													end
													v84[#v84 + 1 + 0] = v220;
												end
												v85[v87[(623 - (96 + 92)) - (153 + 280)]] = v29(v218, v219, v66);
												break;
											end
											if (v217 == (2 - 1)) then
												v220 = {};
												v219 = v10({}, {__index=function(v1230, v1231)
													local v1232 = v220[v1231];
													return v1232[1 + 0][v1232[1 + 1]];
												end,__newindex=function(v1233, v1234, v1235)
													local v1236 = 0 + 0;
													local v1237;
													while true do
														if ((v1236 == (0 + 0)) or (171 > 1039)) then
															v1237 = v220[v1234];
															v1237[1 + 0][v1237[2 - 0]] = v1235;
															break;
														end
													end
												end});
												v217 = 2;
											end
										end
									end
								elseif (v88 <= (912 - (142 + 757))) then
									if ((v88 == (8 + 4)) or (2474 <= 2236)) then
										do
											return;
										end
									else
										local v221 = 667 - (89 + 578);
										local v222;
										local v223;
										while true do
											if ((0 + 0) == v221) then
												v222 = nil;
												v223 = nil;
												v85[v87[3 - 1]] = v87[1052 - (572 + 477)];
												v79 = v79 + 1;
												v221 = 1 + 0 + 0;
											end
											if (v221 == (2 + 1)) then
												v85[v87[2]][v87[1 + 2]] = v85[v87[4]];
												v79 = v79 + (87 - (84 + 1 + 1));
												v87 = v75[v79];
												v85[v87[2 - (79 - (32 + 47))]][v87[3]] = v85[v87[4]];
												v221 = 3 + (1978 - (1053 + 924));
											end
											if ((((827 + 17) - (497 + 345)) == v221) or (2432 < 1170)) then
												v223 = v87[1 + 1];
												v85[v223] = v85[v223](v13(v85, v223 + 1, v87[1 + 2]));
												v79 = v79 + 1;
												v87 = v75[v79];
												v221 = 1336 - (605 + 728);
											end
											if (v221 == (5 + 1)) then
												v85[v223] = v222[v87[8 - (6 - 2)]];
												break;
											end
											if (v221 == (1 + 4)) then
												v87 = v75[v79];
												v223 = v87[7 - (1653 - (685 + 963))];
												v222 = v85[v87[3 + 0]];
												v85[v223 + 1] = v222;
												v221 = 6;
											end
											if ((1069 < 4760) and (v221 == (2 - 1))) then
												v87 = v75[v79];
												v85[v87[2 + (0 - 0)]] = v87[492 - (457 + 32)];
												v79 = v79 + 1 + (0 - 0);
												v87 = v75[v79];
												v221 = 2;
											end
											if ((4793 > 3282) and (v221 == (1406 - (832 + 570)))) then
												v79 = v79 + (1710 - (541 + 1168)) + (1597 - (645 + 952));
												v87 = v75[v79];
												v85[v87[2]] = v85[v87[(839 - (669 + 169)) + (6 - 4)]][v87[13 - 9]];
												v79 = v79 + 1 + 0;
												v221 = 801 - ((1276 - 688) + 208);
											end
										end
									end
								elseif ((4926 > 535) and (v88 <= (37 - 23))) then
									local v224;
									v85[v87[2]] = v85[v87[1803 - (884 + 916)]][v87[4]];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[2 + 0 + 0]] = v87[656 - (232 + 421)];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1891 - (1569 + 320)]] = v87[1 + 2];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1 + 0]] = v87[9 - 6];
									v79 = v79 + (606 - (316 + 289));
									v87 = v75[v79];
									v224 = v87[5 - 3];
									v85[v224] = v85[v224](v13(v85, v224 + 1 + 0, v87[(2221 - (181 + 584)) - (666 + (2182 - (665 + 730)))]));
									v79 = v79 + (426 - (360 + 65));
									v87 = v75[v79];
									v85[v87[2 + 0]][v87[(740 - 483) - (79 + 175)]] = v85[v87[5 - 1]];
									v79 = v79 + (1 - 0) + 0;
									v87 = v75[v79];
									v85[v87[2]][v87[3]] = v87[12 - (1358 - (540 + 810))];
									v79 = v79 + ((3 - 2) - 0);
									v87 = v75[v79];
									v85[v87[901 - (503 + 396)]] = v66[v87[8 - 5]];
									v79 = v79 + (182 - (92 + 89));
									v87 = v75[v79];
									v85[v87[(3 + 0) - 1]] = v85[v87[2 + 1]][v87[3 + 1]];
									v79 = v79 + (3 - 2);
									v87 = v75[v79];
									v85[v87[(204 - (166 + 37)) + (1882 - (22 + 1859))]] = v87[6 - 3];
								elseif (v88 == (14 + 1)) then
									local v689;
									v85[v87[1 + 1]] = v85[v87[8 - 5]][v87[4]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + (1773 - (843 + 929))]] = v87[4 - (263 - (30 + 232))];
									v79 = v79 + ((3555 - 2310) - (485 + (1536 - (55 + 722))));
									v87 = v75[v79];
									v85[v87[4 - 2]] = v87[1192 - ((948 - 506) + (2422 - (78 + 1597)))];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1137 - (832 + 303)]] = v87[(209 + 740) - (88 + 858)];
									v79 = v79 + 1;
									v87 = v75[v79];
									v689 = v87[1 + 0 + 1];
									v85[v689] = v85[v689](v13(v85, v689 + 1 + 0, v87[3 + 0]));
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1]][v87[792 - ((1315 - (305 + 244)) + 23)]] = v85[v87[4]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[2]][v87[14 - (11 + 0)]] = v85[v87[4]];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[4 - 2]] = v66[v87[10 - 7]];
									v79 = v79 + (1074 - (1036 + 37));
									v87 = v75[v79];
									v85[v87[(107 - (95 + 10)) + 0]] = v85[v87[5 - 2]][v87[4]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[1482 - (641 + 839)]] = v87[916 - (910 + 3 + 0)];
								else
									v85[v87[4 - 2]]();
								end
							elseif (v88 <= ((5415 - 3706) - (1466 + 218))) then
								if (v88 <= 20) then
									if (v88 <= (24 - 6)) then
										if ((v88 > (8 + 9)) or (1769 == 4775)) then
											if ((4724 == 4724) and v85[v87[1150 - (556 + 592)]]) then
												v79 = v79 + 1;
											else
												v79 = v87[(764 - (592 + 170)) + 1];
											end
										else
											local v246;
											v85[v87[2]] = v87[811 - ((1147 - 818) + 479)];
											v79 = v79 + 1;
											v87 = v75[v79];
											v246 = v87[856 - (174 + 680)];
											v85[v246] = v85[v246](v13(v85, v246 + (3 - 2), v87[7 - 4]));
											v79 = v79 + (1 - (0 + 0));
											v87 = v75[v79];
											v85[v87[2 + 0 + 0]][v87[742 - ((955 - 559) + 56 + 287)]] = v85[v87[1 + 3]];
											v79 = v79 + (1478 - (29 + 1448));
											v87 = v75[v79];
											v85[v87[1391 - (135 + 1254)]][v87[11 - 8]] = v85[v87[4]];
											v79 = v79 + (4 - 3);
											v87 = v75[v79];
											v85[v87[2 + 0]] = v66[v87[1530 - ((720 - 331) + 1138)]];
											v79 = v79 + (575 - (102 + (979 - (353 + 154))));
											v87 = v75[v79];
											v85[v87[(2 - 0) + 0]] = v85[v87[2 + 1]][v87[4]];
											v79 = v79 + (1 - 0);
											v87 = v75[v79];
											v85[v87[2 + 0]] = v87[1548 - (221 + 99 + 1225)];
											v79 = v79 + (1 - 0);
											v87 = v75[v79];
											v246 = v87[2];
											v85[v246] = v85[v246](v85[v246 + 1 + 0]);
											v79 = v79 + (1465 - (157 + 1307));
											v87 = v75[v79];
											v85[v87[1861 - (643 + 178 + 1038)]] = v66[v87[7 - 4]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v85[v87[3 - 1]] = v85[v87[2 + 1]][v87[9 - 5]];
										end
									elseif (v88 == (1045 - (834 + 192))) then
										local v266;
										local v267;
										v85[v87[2 + 0]] = v65[v87[1 + 2]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v267 = v87[1 + 1];
										v266 = v85[v87[3]];
										v85[v267 + 1 + 0] = v266;
										v85[v267] = v266[v87[4]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2 - 0]] = v87[3];
										v79 = v79 + (305 - (300 + 4));
										v87 = v75[v79];
										v267 = v87[1 + 1];
										v85[v267] = v85[v267](v13(v85, v267 + 1, v87[7 - 4]));
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2]] = v66[v87[(526 - 161) - (112 + 250)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[4 - 2]] = v85[v87[2 + 1]][v87[4]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2 + 0]] = v85[v87[3]][v87[2 + 2]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[1416 - (1001 + 413)]] = v85[v87[6 - 3]][v87[886 - (244 + 638)]];
										v79 = v79 + (694 - (627 + 66));
										v87 = v75[v79];
										v85[v87[5 - (5 - 2)]] = v85[v87[605 - (512 + 90)]][v87[1910 - (1665 + 241)]];
										v79 = v79 + (718 - (373 + 344));
										v87 = v75[v79];
										v85[v87[2]] = v87[2 + 1];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v267 = v87[5 - 3];
										v85[v267](v13(v85, v267 + (1 - 0), v87[1102 - (35 + (2480 - 1416))]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v79 = v87[6 - 3];
									else
										v85[v87[1 + 1]] = v87[1239 - (298 + 938)] ~= (86 - (7 + 79));
									end
								elseif (v88 <= (1281 - (233 + 1026))) then
									if ((2710 > 538) and (v88 > (1687 - (636 + 1030)))) then
										v65[v87[2 + 1 + 0]] = v85[v87[2 + 0]];
									else
										v85[v87[(182 - (24 + 157)) + 1]] = v87[1 + 2];
									end
								elseif (v88 <= (244 - ((109 - 54) + 166))) then
									v85[v87[1 + (2 - 1)]] = v65[v87[3]];
								elseif (v88 == (3 + 21)) then
									if (v85[v87[2]] == v85[v87[15 - 11]]) then
										v79 = v79 + (298 - (11 + 25 + 261));
									else
										v79 = v87[3];
									end
								else
									local v710 = 0;
									while true do
										if ((v710 == (4 - 1)) or (946 >= 4831)) then
											v85[v87[1370 - (34 + 1334)]] = v85[v87[3]][v87[2 + (4 - 2)]];
											v79 = v79 + (381 - (262 + 118)) + 0;
											v87 = v75[v79];
											if v85[v87[1285 - (1035 + (1331 - (1038 + 45)))]] then
												v79 = v79 + (22 - (20 + 1));
											else
												v79 = v87[2 + 1];
											end
											break;
										end
										if ((689 == 689) and (v710 == 0)) then
											v85[v87[321 - (134 + 185)]]();
											v79 = v79 + (1134 - (549 + 584));
											v87 = v75[v79];
											v85[v87[2]] = v66[v87[688 - (314 + 371)]];
											v710 = 1;
										end
										if (((3 - 2) == v710) or (866 == 2888)) then
											v79 = v79 + (969 - (478 + 490));
											v87 = v75[v79];
											v85[v87[2 + (0 - 0)]] = v85[v87[1175 - ((1016 - (19 + 211)) + 386)]][v87[4]];
											v79 = v79 + (3 - 2);
											v710 = 1381 - (1055 + 324);
										end
										if (v710 == (1342 - (1093 + (360 - (88 + 25))))) then
											v87 = v75[v79];
											v85[v87[2 + 0]] = v85[v87[1 + 2]][v87[(38 - 23) - 11]];
											v79 = v79 + 1;
											v87 = v75[v79];
											v710 = 9 - 6;
										end
									end
								end
							elseif (v88 <= (82 - 53)) then
								if (v88 <= (67 - 40)) then
									if ((3890 == 3890) and (v88 == (10 + 16))) then
										local v297 = 0 - 0;
										local v298;
										while true do
											if (v297 == (0 - 0)) then
												v298 = v87[2 + 0 + 0];
												v85[v298](v13(v85, v298 + (2 - 1), v87[691 - (364 + 324)]));
												break;
											end
										end
									else
										local v299 = v87[5 - 3];
										local v300 = {v85[v299](v13(v85, v299 + (2 - 1), v80))};
										local v301 = 0;
										for v672 = v299, v87[4] do
											local v673 = 0 + (1036 - (1007 + 29));
											while true do
												if (((0 - 0) == v673) or (537 > 2992)) then
													v301 = v301 + ((1 + 0) - 0);
													v85[v672] = v300[v301];
													break;
												end
											end
										end
									end
								elseif (v88 > (84 - 56)) then
									local v302;
									v302 = v87[1270 - (1249 + 19)];
									v85[v302](v13(v85, v302 + 1 + (0 - 0), v87[3]));
									v79 = v79 + ((14 - 11) - 2);
									v87 = v75[v79];
									v85[v87[1 + 1]] = v66[v87[1089 - (686 + (1211 - (340 + 471)))]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[2]] = v85[v87[3]][v87[233 - (73 + 156)]];
									v79 = v79 + 1 + (0 - 0);
									v87 = v75[v79];
									v85[v87[813 - (721 + 90)]] = v87[1 + (591 - (276 + 313))];
									v79 = v79 + (3 - 2);
									v87 = v75[v79];
									v302 = v87[472 - (224 + 246)];
									v85[v302] = v85[v302](v85[v302 + (1 - 0)]);
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[2 + 0]] = v66[v87[5 - (1 + 1)]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1 + 0]] = v85[v87[1 + 2]][v87[3 + (1973 - (495 + 1477))]];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[6 - 4]] = v87[(1544 - 1028) - (203 + 310)];
									v79 = v79 + (1994 - (1238 + 755));
									v87 = v75[v79];
									v85[v87[2]] = v87[1 + 2];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[1536 - (709 + 825)]] = v87[3];
								else
									v85[v87[(406 - (342 + 61)) - 1]] = v85[v87[3 - 0]][v87[868 - (196 + 668)]];
									v79 = v79 + (3 - (1 + 1));
									v87 = v75[v79];
									v85[v87[3 - 1]] = v85[v87[836 - (171 + 662)]][v87[4]];
									v79 = v79 + (94 - (4 + 89));
									v87 = v75[v79];
									v85[v87[6 - (169 - (4 + 161))]] = v85[v87[3]][v87[4]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1]] = v85[v87[(8 + 5) - (31 - 21)]][v87[2 + 2]];
									v79 = v79 + (1487 - (35 + 1451));
									v87 = v75[v79];
									if v85[v87[1455 - ((73 - 45) + 1425)]] then
										v79 = v79 + (1994 - (941 + 1052));
									else
										v79 = v87[3];
									end
								end
							elseif ((v88 <= (30 + 1)) or (4054 < 132)) then
								if (v88 > (1544 - ((1319 - (322 + 175)) + 692))) then
									local v331 = 0 - 0;
									local v332;
									local v333;
									while true do
										if (v331 == 2) then
											v87 = v75[v79];
											v85[v87[1 + 1]][v87[300 - (45 + 252)]] = v85[v87[4]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v331 = 2 + 1;
										end
										if ((1575 <= 2339) and (v331 == 5)) then
											v85[v333 + (2 - 1)] = v332;
											v85[v333] = v332[v87[437 - (114 + 319)]];
											break;
										end
										if (v331 == (5 - 1)) then
											v79 = v79 + 1;
											v87 = v75[v79];
											v333 = v87[(565 - (173 + 390)) - 0];
											v332 = v85[v87[2 + 1]];
											v331 = 7 - 2;
										end
										if (v331 == (0 - 0)) then
											v332 = nil;
											v333 = nil;
											v85[v87[1965 - (138 + 418 + 1407)]] = v87[1209 - (741 + 465)];
											v79 = v79 + (466 - (170 + 295));
											v331 = (315 - (203 + 111)) + 0;
										end
										if (v331 == (1 + 0 + 0)) then
											v87 = v75[v79];
											v333 = v87[4 - 2];
											v85[v333] = v85[v333](v13(v85, v333 + 1, v87[3 + 0]));
											v79 = v79 + 1 + 0;
											v331 = 2;
										end
										if ((3 + 0) == v331) then
											v85[v87[2 + 0]][v87[3]] = v85[v87[4]];
											v79 = v79 + (1231 - ((2792 - 1835) + 273));
											v87 = v75[v79];
											v85[v87[1 + 1]] = v85[v87[2 + 1 + 0]][v87[15 - 11]];
											v331 = 10 - 6;
										end
									end
								else
									v85[v87[708 - (57 + 649)]][v87[9 - (390 - (328 + 56))]] = v87[(7 + 12) - 15];
								end
							elseif (v88 <= (1812 - ((901 - (433 + 79)) + 1391))) then
								local v336;
								v85[v87[2]] = v87[3];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2]] = v87[3];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2 + 0]] = v87[1 + 0 + 2];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v336 = v87[953 - (783 + 168)];
								v85[v336] = v85[v336](v13(v85, v336 + (3 - 2), v87[3 + 0]));
								v79 = v79 + (312 - (250 + 59 + 2));
								v87 = v75[v79];
								v85[v87[(16 - 11) - (14 - 11)]][v87[1215 - (1090 + 122)]] = v85[v87[2 + 2]];
								v79 = v79 + (3 - 2);
								v87 = v75[v79];
								v85[v87[2 + 0]] = v66[v87[3]];
								v79 = v79 + (1119 - (458 + 170 + 437 + 53));
								v87 = v75[v79];
								v85[v87[1 + (1037 - (562 + 474))]] = v85[v87[7 - 4]][v87[18 - 14]];
								v79 = v79 + (775 - (431 + 343));
								v87 = v75[v79];
								v85[v87[3 - 1]] = v87[3];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[2 + 0]] = v87[1 + 2];
								v79 = v79 + (1696 - (556 + 1139));
								v87 = v75[v79];
								v85[v87[2]] = v87[18 - (6 + 9)];
							elseif (v88 == 33) then
								local v712;
								v85[v87[1 + 1]] = v87[2 + 1];
								v79 = v79 + (170 - (28 + 141));
								v87 = v75[v79];
								v712 = v87[1 + 1];
								v85[v712] = v85[v712](v13(v85, v712 + 1, v87[3 - 0]));
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[1319 - (486 + 831)]][v87[7 - 4]] = v85[v87[13 - 9]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[6 - 4]][v87[1266 - (668 + 595)]] = v85[v87[4 + 0]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[5 - 3]] = v66[v87[293 - (23 + 267)]];
								v79 = v79 + (1945 - (1129 + 815));
								v87 = v75[v79];
								v85[v87[389 - (371 + 16)]] = v85[v87[1753 - (1326 + 424)]][v87[4]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[3 - 1]] = v87[10 - 7];
								v79 = v79 + 1;
								v87 = v75[v79];
								v712 = v87[120 - (88 + 30)];
								v85[v712] = v85[v712](v85[v712 + (772 - (720 + 51))]);
								v79 = v79 + ((4 - 2) - (1 - 0));
								v87 = v75[v79];
								v85[v87[1778 - (421 + 1355)]] = v66[v87[4 - 1]];
								v79 = v79 + (906 - (76 + 829));
								v87 = v75[v79];
								v85[v87[1 + (1674 - (1506 + 167))]] = v85[v87[1086 - (286 + 797)]][v87[6 - 2]];
							else
								local v733;
								v85[v87[7 - 5]] = v85[v87[4 - 1]];
								v79 = v79 + ((706 - (58 + 208)) - (397 + 25 + 17));
								v87 = v75[v79];
								v733 = v87[1 + 1 + 0];
								v85[v733](v85[v733 + (801 - (24 + 446 + 330))]);
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v85[v87[7 - 5]] = v66[v87[788 - (222 + (900 - (258 + 79)))]];
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v85[v87[2 + 0]]();
								v79 = v79 + (191 - (3 + 20 + 167));
								v87 = v75[v79];
								v79 = v87[1801 - (690 + 1108)];
							end
						elseif ((2491 > 2023) and (v88 <= (19 + 33))) then
							if ((v88 <= (36 + (14 - 7))) or (3665 > 3859)) then
								if (v88 <= (886 - (40 + (2278 - (1219 + 251))))) then
									if ((v88 <= (6 + 30)) or (3820 <= 3317)) then
										if (v88 == (133 - 98)) then
											local v352 = 0;
											local v353;
											local v354;
											local v355;
											local v356;
											while true do
												if (v352 == (1 + 0)) then
													v80 = (v355 + v353) - (1 + 0);
													v356 = 0 + 0;
													v352 = 573 - ((1718 - (1231 + 440)) + 524);
												end
												if (v352 == (0 + 0)) then
													v353 = v87[5 - 3];
													v354, v355 = v78(v85[v353](v85[v353 + (1 - 0)]));
													v352 = 2 - 1;
												end
												if (v352 == 2) then
													for v1241 = v353, v80 do
														v356 = v356 + ((1785 - (34 + 24)) - (1165 + 561));
														v85[v1241] = v354[v356];
													end
													break;
												end
											end
										else
											local v357 = 0 + 0;
											local v358;
											while true do
												if (((0 + 0) == v357) or (445 > 3098)) then
													v358 = v87[6 - 4];
													v85[v358] = v85[v358](v85[v358 + 1 + 0]);
													break;
												end
											end
										end
									elseif (v88 == (516 - (341 + 138))) then
										if (v85[v87[1 + 1]] == v87[7 - 3]) then
											v79 = v79 + (327 - (89 + 237));
										else
											v79 = v87[9 - 6];
										end
									else
										local v359 = 0 - 0;
										local v360;
										while true do
											if (v359 == (890 - (581 + 300))) then
												v79 = v79 + (1221 - (855 + 365));
												v87 = v75[v79];
												v85[v87[4 - 2]] = v87[3];
												break;
											end
											if ((v359 == (3 + 5)) or (814 == 3154)) then
												v79 = v79 + (1236 - (1030 + 205));
												v87 = v75[v79];
												v85[v87[2]] = v85[v87[3 + 0]][v87[4]];
												v359 = (16 - 7) + 0;
											end
											if (v359 == (290 - (156 + 130))) then
												v87 = v75[v79];
												v360 = v87[4 - 2];
												v85[v360] = v85[v360](v13(v85, v360 + 1, v87[4 - 1]));
												v359 = 10 - 5;
											end
											if (v359 == (0 + 0 + 0)) then
												v360 = nil;
												v85[v87[2 + 0]] = v85[v87[72 - (10 + 59)]][v87[2 + 2]];
												v79 = v79 + ((12 - 8) - 3);
												v359 = 1164 - (671 + 492);
											end
											if (v359 == (4 + 1)) then
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[1217 - (369 + 846)]][v87[1 + 2]] = v85[v87[4]];
												v359 = 6 + 0;
											end
											if (v359 == (1951 - (1036 + 909))) then
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[2 + 0]][v87[(12 - 8) - 1]] = v87[4];
												v359 = 210 - (11 + 192);
											end
											if (v359 == (2 + (2 - 1))) then
												v87 = v75[v79];
												v85[v87[177 - (135 + 40)]] = v87[6 - 3];
												v79 = v79 + 1 + 0;
												v359 = 8 - 4;
											end
											if (v359 == 2) then
												v87 = v75[v79];
												v85[v87[(6 - 4) - 0]] = v87[179 - (50 + 126)];
												v79 = v79 + (2 - 1);
												v359 = 1 + 2;
											end
											if ((v359 == (1420 - (1233 + 180))) or (3471 >= 4556)) then
												v79 = v79 + (970 - (522 + 447));
												v87 = v75[v79];
												v85[v87[1423 - (107 + (2869 - 1555))]] = v66[v87[2 + 1]];
												v359 = 8;
											end
											if (v359 == (2 - 1)) then
												v87 = v75[v79];
												v85[v87[1 + 1]] = v87[5 - 2];
												v79 = v79 + (3 - 2);
												v359 = 2;
											end
										end
									end
								elseif ((4724 == 4724) and (v88 <= (1950 - (716 + 1194)))) then
									if ((v88 > (1 + 38)) or (3187 == 4769)) then
										for v674 = v87[1 + 1], v87[506 - (74 + 429)] do
											v85[v674] = nil;
										end
									else
										local v361 = (1589 - (877 + 712)) - (0 + 0);
										local v362;
										while true do
											if (v361 == (4 + 4)) then
												v87 = v75[v79];
												v85[v87[4 - (756 - (242 + 512))]] = v65[v87[3 + 0]];
												v79 = v79 + (2 - 1);
												v87 = v75[v79];
												v85[v87[4 - 2]] = v85[v87[3]][v87[437 - (279 + 154)]];
												v79 = v79 + 1;
												v361 = 787 - (454 + 324);
											end
											if ((1 + 0) == v361) then
												v87 = v75[v79];
												v85[v87[19 - (12 + 5)]] = v65[v87[2 + 1]];
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[4 - 2]] = v66[v87[2 + 1]];
												v79 = v79 + (1094 - (277 + 816));
												v361 = 8 - 6;
											end
											if (v361 == (1186 - (1058 + 125))) then
												v87 = v75[v79];
												v85[v87[1 + 1]] = v85[v87[978 - (815 + 160)]][v87[(35 - 18) - 13]];
												v79 = v79 + (628 - (92 + 535));
												v87 = v75[v79];
												v85[v87[4 - 2]] = v85[v87[3]][v87[1 + 0 + 3]];
												v79 = v79 + (2 - 1);
												v361 = 1902 - (41 + 1857);
											end
											if (v361 == (1895 - (1222 + 671))) then
												v87 = v75[v79];
												v85[v87[5 - 3]] = v85[v87[3]][v87[5 - (1 - 0)]];
												v79 = v79 + 1 + 0;
												v87 = v75[v79];
												v85[v87[1184 - (229 + 953)]] = v65[v87[1777 - (1111 + 663)]];
												v79 = v79 + 1;
												v361 = 3;
											end
											if ((v361 == (1583 - (874 + (2562 - 1857)))) or (3582 < 1822)) then
												v87 = v75[v79];
												v85[v87[2]] = v65[v87[1 + 2]];
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[2 + 0]] = v85[v87[(6 + 0) - 3]][v87[1 + 3]];
												v79 = v79 + 1;
												v361 = 5;
											end
											if (v361 == (686 - (642 + 37))) then
												v87 = v75[v79];
												v85[v87[2]] = v85[v87[1 + 2]][v87[1 + 0 + 3]];
												v79 = v79 + (2 - 1);
												v87 = v75[v79];
												v85[v87[2]] = v85[v87[457 - (233 + 221)]][v87[4]];
												v79 = v79 + (2 - 1);
												v361 = 8 + 0 + 0;
											end
											if (v361 == ((3082 - 1535) - ((1094 - 376) + 823))) then
												v87 = v75[v79];
												v85[v87[(1787 - (1476 + 309)) + 0]] = v85[v87[3]] + v85[v87[4]];
												v79 = v79 + (806 - ((1550 - (299 + 985)) + 539));
												v87 = v75[v79];
												v85[v87[2]] = v65[v87[8 - 5]];
												v79 = v79 + ((292 + 934) - (636 + 589));
												v361 = 7;
											end
											if ((1756 > 1467) and (v361 == 10)) then
												v87 = v75[v79];
												v85[v87[2]] = v85[v87[3]] + v85[v87[9 - (16 - 11)]];
												v79 = v79 + (1 - 0);
												v87 = v75[v79];
												v362 = v87[2 + (93 - (86 + 7))];
												v85[v362] = v85[v362](v13(v85, v362 + 1, v87[2 + 1]));
												v361 = 11;
											end
											if ((1020 - (657 + 358)) == v361) then
												v87 = v75[v79];
												v85[v87[4 - 2]] = v85[v87[3]][v87[4]];
												v79 = v79 + (2 - 1);
												v87 = v75[v79];
												v85[v87[1189 - (1151 + 36)]] = v85[v87[3 + 0]][v87[2 + 2]];
												v79 = v79 + (4 - 3);
												v361 = 6;
											end
											if ((9 == v361) or (2312 >= 3768)) then
												v87 = v75[v79];
												v85[v87[5 - 3]] = v85[v87[3]][v87[1836 - (1552 + 280)]];
												v79 = v79 + (835 - (64 + 770));
												v87 = v75[v79];
												v85[v87[2]] = v85[v87[3 + 0]][v87[4]];
												v79 = v79 + (2 - 1);
												v361 = 1 + 1 + (888 - (672 + 208));
											end
											if (11 == v361) then
												v79 = v79 + (1244 - (157 + 1086));
												v87 = v75[v79];
												v85[v87[2]][v87[5 - (1 + 1)]] = v85[v87[17 - 13]];
												v79 = v79 + (1 - 0);
												v87 = v75[v79];
												v79 = v87[3 - (132 - (14 + 118))];
												break;
											end
											if ((((1264 - (339 + 106)) - (599 + 220)) == v361) or (4584 <= 4241)) then
												v362 = nil;
												v85[v87[3 - (1 + 0)]] = v65[v87[1934 - (1813 + 118)]];
												v79 = v79 + 1;
												v87 = v75[v79];
												v85[v87[2 + 0]] = v85[v87[1220 - (841 + 376)]] - v85[v87[4]];
												v79 = v79 + 1 + 0;
												v361 = 1 - 0;
											end
										end
									end
								elseif ((v88 <= (10 + 31)) or (1719 > 1793)) then
									v65[v87[1398 - (440 + 955)]] = v85[v87[5 - 3]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[861 - (464 + 395)]] = v65[v87[3]];
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[1 + 1]][v87[4 - 1]] = v87[841 - (467 + 370)];
									v79 = v79 + (1 - (0 + 0));
									v87 = v75[v79];
									v85[v87[2 + 0]] = v87[10 - (17 - 10)];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v79 = v87[6 - 3];
								elseif (v88 == 42) then
									v85[v87[522 - (150 + 370)]] = v85[v87[1285 - (74 + 1208)]];
								else
									local v743 = v87[4 - 2];
									local v744 = v87[18 - 14];
									local v745 = v743 + 2;
									local v746 = {v85[v743](v85[v743 + (391 - (14 + 376))], v85[v745])};
									for v1152 = 1, v744 do
										v85[v745 + v1152] = v746[v1152];
									end
									local v747 = v746[(1 + 0) - 0];
									if (v747 or (2352 == 4656)) then
										v85[v745] = v747;
										v79 = v87[356 - (260 + 93)];
									else
										v79 = v79 + 1 + 0;
									end
								end
							elseif ((v88 <= (42 + 5)) or (2201 >= 4788)) then
								if (v88 <= (43 + 2)) then
									if ((628 == 628) and (v88 == (128 - 84))) then
										local v373;
										v373 = v87[2 + 0];
										v85[v373](v13(v85, v373 + ((75 + 4) - (23 + 55)), v87[6 - 3]));
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2 + 0]] = v66[v87[3 + 0]];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[1 + 1]] = v85[v87[904 - (652 + 249)]][v87[10 - 6]];
										v79 = v79 + (1869 - (708 + 1160));
										v87 = v75[v79];
										v85[v87[5 - 3]] = v87[5 - 2];
										v79 = v79 + ((63 - 35) - (10 + 17));
										v87 = v75[v79];
										v373 = v87[1 + 1];
										v85[v373] = v85[v373](v85[v373 + 1]);
										v79 = v79 + (1733 - (1400 + 332));
										v87 = v75[v79];
										v85[v87[3 - 1]] = v66[v87[1911 - (242 + 1666)]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1 + 1]] = v85[v87[3]][v87[2 + (3 - 1)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[942 - (850 + 90)]] = v87[4 - 1];
										v79 = v79 + (1391 - (360 + 1030));
										v87 = v75[v79];
										v85[v87[2]] = v87[3 + 0];
										v79 = v79 + (2 - (1975 - (1181 + 793)));
										v87 = v75[v79];
										v85[v87[2]] = v87[(1 + 2) - (307 - (105 + 202))];
										v79 = v79 + (1662 - (909 + 752));
										v87 = v75[v79];
										v85[v87[2]] = v87[1226 - (109 + 1114)];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v373 = v87[1 + 1];
										v85[v373] = v85[v373](v13(v85, v373 + ((195 + 48) - (6 + 236)), v87[2 + 1]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[4 - 2]][v87[3]] = v85[v87[6 - 2]];
										v79 = v79 + (1134 - (1076 + 57));
										v87 = v75[v79];
										v85[v87[1 + 1]] = v66[v87[692 - ((1389 - (352 + 458)) + 110)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2]] = v85[v87[3]][v87[4 + 0]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[409 - (174 + 233)]] = v87[8 - 5];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[1 + 1]] = v87[1177 - (663 + 511)];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[(3 - 2) + 1]] = v87[9 - 6];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[4 - 2]] = v87[7 - 4];
										v79 = v79 + 1;
										v87 = v75[v79];
										v373 = v87[(2 - 1) + 1];
										v85[v373] = v85[v373](v13(v85, v373 + 1, v87[(5 + 0) - 2]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2]][v87[1 + 2]] = v85[v87[726 - (478 + 244)]];
										v79 = v79 + (518 - (440 + 77));
										v87 = v75[v79];
										v85[v87[1 + 1]] = v66[v87[(29 - 19) - (956 - (438 + 511))]];
										v79 = v79 + (1557 - (655 + 901));
										v87 = v75[v79];
										v85[v87[1 + 1]] = v85[v87[3 + 0]][v87[4]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2 + 0]] = v87[3];
										v79 = v79 + (3 - 2);
										v87 = v75[v79];
										v85[v87[1447 - (695 + 750)]] = v87[(1392 - (1262 + 121)) - (1074 - (728 + 340))];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[(1797 - (816 + 974)) - 5]] = v87[354 - (285 + 66)];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v373 = v87[(4018 - 2706) - (682 + 628)];
										v85[v373] = v85[v373](v13(v85, v373 + 1, v87[10 - 7]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2]][v87[3]] = v85[v87[303 - (176 + 123)]];
										v79 = v79 + 1 + (339 - (163 + 176));
										v87 = v75[v79];
										v85[v87[2 + 0]][v87[272 - (239 + 30)]] = v87[(5 - 3) + 2];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[3 - 1]] = v66[v87[3]];
										v79 = v79 + ((9 - 7) - 1);
										v87 = v75[v79];
										v85[v87[317 - (306 + 9)]] = v85[v87[10 - 7]][v87[1 + 3]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[1 + 1]] = v87[8 - 5];
										v79 = v79 + ((416 + 960) - (1140 + 235));
										v87 = v75[v79];
										v85[v87[2 + 0]] = v87[3 + 0];
										v79 = v79 + 1 + (1810 - (1564 + 246));
										v87 = v75[v79];
										v85[v87[54 - (33 + 19)]] = v87[3];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v373 = v87[5 - 3];
										v85[v373] = v85[v373](v13(v85, v373 + (346 - (124 + 221)) + 0 + 0, v87[5 - 2]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2]][v87[692 - ((1037 - (115 + 336)) + 103)]] = v85[v87[1 + 3]];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[2]][v87[1491 - (1309 + 179)]] = v87[6 - 2];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1 + 1]][v87[7 - 4]] = v85[v87[4]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[3 - 1]] = v66[v87[5 - 2]];
										v79 = v79 + (610 - (295 + 314));
										v87 = v75[v79];
										v85[v87[4 - 2]] = v85[v87[1965 - ((2863 - 1563) + 137 + 525)]][v87[(58 - (45 + 1)) - (1 + 7)]];
										v79 = v79 + (1756 - ((3168 - (1282 + 708)) + 577));
										v87 = v75[v79];
										v85[v87[2 + 0]] = v87[8 - 5];
										v79 = v79 + (1213 - (583 + 629));
										v87 = v75[v79];
										v373 = v87[1407 - (851 + 554)];
										v85[v373] = v85[v373](v85[v373 + 1 + 0 + 0]);
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[3 - 1]] = v66[v87[305 - (115 + 187)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2 + 0]] = v85[v87[11 - 8]][v87[1165 - (160 + 1001)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[2 + 0]] = v87[3];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[2]] = v87[361 - (237 + 121)];
										v79 = v79 + (898 - (525 + (962 - 590)));
										v87 = v75[v79];
										v85[v87[3 - 1]] = v87[9 - 6];
										v79 = v79 + (143 - (51 + 45 + 46));
										v87 = v75[v79];
										v85[v87[779 - ((1813 - (943 + 227)) + 134)]] = v87[2 + 1];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v373 = v87[7 - 5];
										v85[v373] = v85[v373](v13(v85, v373 + 1 + 0, v87[2 + 1]));
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[3 - (1632 - (1539 + 92))]][v87[722 - (316 + 403)]] = v85[v87[3 + 1]];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[1 + (1947 - (706 + 1240))]] = v66[v87[3]];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[2 + (258 - (81 + 177))]] = v85[v87[1 + (5 - 3)]][v87[4]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[6 - (261 - (212 + 45))]] = v87[14 - (36 - 25)];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[1 + 1]] = v87[5 - 2];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[(1951 - (708 + 1238)) - 3]] = v87[3];
										v79 = v79 + (18 - (12 + 5));
										v87 = v75[v79];
										v85[v87[(1 + 6) - 5]] = v87[3];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v373 = v87[3 - 1];
										v85[v373] = v85[v373](v13(v85, v373 + 1, v87[7 - 4]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[1975 - (1656 + 317)]][v87[3 + 0]] = v85[v87[4]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2 + 0 + 0]] = v66[v87[3]];
										v79 = v79 + ((1669 - (586 + 1081)) - 1);
										v87 = v75[v79];
										v85[v87[(520 - (348 + 163)) - 7]] = v85[v87[357 - (5 + 349)]][v87[18 - 14]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1273 - (239 + 27 + 1005)]] = v87[2 + 1];
										v79 = v79 + (3 - 2);
										v87 = v75[v79];
										v85[v87[(282 - (215 + 65)) - 0]] = v87[1699 - ((1429 - 868) + 1135)];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[6 - 4]] = v87[1069 - ((2366 - (1541 + 318)) + 496 + 63)];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v373 = v87[6 - 4];
										v85[v373] = v85[v373](v13(v85, v373 + (389 - (212 + 176)), v87[3]));
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[907 - (127 + 123 + 655)]][v87[(7 + 1) - 5]] = v85[v87[6 - 2]];
										v79 = v79 + ((1751 - (1036 + 714)) - 0);
										v87 = v75[v79];
										v85[v87[1958 - (1869 + 87)]][v87[10 - 7]] = v87[4];
										v79 = v79 + (1902 - (484 + 1417));
										v87 = v75[v79];
										v85[v87[4 - 2]] = v66[v87[4 - (1 + 0)]];
										v79 = v79 + (774 - (48 + 725));
										v87 = v75[v79];
										v85[v87[2 - 0]] = v85[v87[3]][v87[10 - 6]];
										v79 = v79 + 1 + 0 + 0;
										v87 = v75[v79];
										v85[v87[4 - 2]] = v87[1 + 2];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1 + 1]] = v87[856 - (152 + 701)];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1313 - (430 + 881)]] = v87[2 + 1];
										v79 = v79 + (896 - (557 + 338));
										v87 = v75[v79];
										v373 = v87[1 + 1];
										v85[v373] = v85[v373](v13(v85, v373 + (1281 - (883 + 397)), v87[3]));
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[6 - 4]][v87[(597 - (563 + 27)) - 4]] = v85[v87[8 - 4]];
										v79 = v79 + (802 - ((1952 - 1453) + 302));
										v87 = v75[v79];
										v85[v87[2]][v87[869 - (39 + 827)]] = v85[v87[4]];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[4 - 2]] = v66[v87[11 - 8]];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[1 + 1]] = v85[v87[8 - 5]][v87[1 + 3]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[(1988 - (1369 + 617)) - 0]] = v87[3];
										v79 = v79 + (1488 - (85 + 1402));
										v87 = v75[v79];
										v373 = v87[106 - (103 + 1)];
										v85[v373] = v85[v373](v85[v373 + 1]);
										v79 = v79 + (555 - (475 + 79));
										v87 = v75[v79];
										v85[v87[1 + 1]] = v66[v87[6 - 3]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[6 - 4]] = v85[v87[3]][v87[1 + 3]];
									else
										local v477 = 0 + 0;
										local v478;
										local v479;
										while true do
											if ((332 <= 3106) and (v477 == (1504 - (1395 + 108)))) then
												for v1246 = (4 - 2) - (404 - (274 + 129)), #v84 do
													local v1247 = 1204 - ((224 - (12 + 205)) + 1197);
													local v1248;
													while true do
														if ((v1247 == (0 + 0 + (0 - 0))) or (1700 < 1298)) then
															v1248 = v84[v1246];
															for v1373 = 0 + 0, #v1248 do
																local v1374 = v1248[v1373];
																local v1375 = v1374[1];
																local v1376 = v1374[321 - (27 + 283 + 9)];
																if ((v1375 == v85) and (v1376 >= v478)) then
																	local v1383 = 0 - (384 - (27 + 357));
																	while true do
																		if (v1383 == 0) then
																			v479[v1376] = v1375[v1376];
																			v1374[1 - 0] = v479;
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
												end
												break;
											end
											if ((2082 == 2082) and (v477 == (0 - 0))) then
												v478 = v87[3 - 1];
												v479 = {};
												v477 = 1;
											end
										end
									end
								elseif (v88 > (87 - 41)) then
									local v480;
									local v481;
									v85[v87[141 - ((523 - (91 + 389)) + 96)]] = v66[v87[12 - 9]];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[2]] = v85[v87[3 + 0]][v87[2 + 2]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[3 - 1]] = v87[2 + 1];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[2]] = v87[3];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v481 = v87[1 + 1];
									v85[v481] = v85[v481](v13(v85, v481 + (1752 - (1414 + 337)), v87[1943 - (1642 + 298)]));
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[2]][v87[8 - 5]] = v85[v87[301 - (90 + 207)]];
									v79 = v79 + (2 - (1 + 0));
									v87 = v75[v79];
									v85[v87[(862 - (706 + 155)) + 1]][v87[3 + 0]] = v85[v87[4]];
									v79 = v79 + (973 - (357 + (2410 - (730 + 1065))));
									v87 = v75[v79];
									v85[v87[1565 - (1339 + 224)]] = v85[v87[3]][v87[3 + 1]];
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v481 = v87[2 + 0];
									v480 = v85[v87[6 - 3]];
									v85[v481 + 1 + 0] = v480;
									v85[v481] = v480[v87[1 + 3]];
								else
									local v502;
									local v503;
									v85[v87[2 + 0]] = v85[v87[3]][v87[1305 - (384 + 917)]];
									v79 = v79 + (698 - (128 + 569));
									v87 = v75[v79];
									v503 = v87[1545 - (1407 + 136)];
									v502 = v85[v87[1890 - (687 + 1200)]];
									v85[v503 + (1711 - (556 + 1154))] = v502;
									v85[v503] = v502[v87[(8 + 6) - 10]];
									v79 = v79 + (96 - (9 + 86));
									v87 = v75[v79];
									v503 = v87[423 - (275 + 146)];
									v85[v503] = v85[v503](v85[v503 + 1]);
									v79 = v79 + 1 + 0 + 0;
									v87 = v75[v79];
									v503 = v87[66 - (29 + 35)];
									v502 = v85[v87[13 - 10]];
									v85[v503 + (2 - 1)] = v502;
									v85[v503] = v502[v87[17 - (18 - 5)]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[2]] = v87[3];
									v79 = v79 + (1013 - (53 + 959));
									v87 = v75[v79];
									v503 = v87[410 - (312 + (939 - (268 + 575)))];
									v85[v503] = v85[v503](v13(v85, v503 + 1, v87[4 - 1]));
									v79 = v79 + (286 - (147 + (1432 - (919 + 375))));
									v87 = v75[v79];
									if v85[v87[2]] then
										v79 = v79 + (900 - (813 + 86));
									else
										v79 = v87[3 + (0 - 0)];
									end
								end
							elseif ((3088 >= 2250) and (v88 <= 49)) then
								if (v88 > 48) then
									v85[v87[(974 - (180 + 791)) - 1]] = v29(v76[v87[495 - (18 + 474)]], nil, v66);
								else
									local v521 = 0 + 0;
									while true do
										if ((v521 == (3 - (1807 - (323 + 1482)))) or (4853 < 920)) then
											v85[v87[1088 - (860 + 226)]] = v85[v87[306 - (121 + (2100 - (1177 + 741)))]][v87[1 + 3]];
											v79 = v79 + (1241 - (65 + 923 + 252));
											v87 = v75[v79];
											v521 = 2;
										end
										if (v521 == (1 + 1)) then
											v65[v87[3]] = v85[v87[1 + 1]];
											v79 = v79 + (1971 - ((183 - 134) + 1921));
											v87 = v75[v79];
											v521 = 893 - (223 + 667);
										end
										if (v521 == ((22 + 34) - (51 + 1))) then
											v79 = v87[5 - 2];
											break;
										end
										if (v521 == (0 - (0 - 0))) then
											v65[v87[1128 - (146 + 82 + 897)]] = v85[v87[1 + 1]];
											v79 = v79 + (606 - (311 + 294));
											v87 = v75[v79];
											v521 = 2 - 1;
										end
										if ((1053 < 4725) and (v521 == (2 + 1))) then
											v85[v87[1445 - (496 + 947)]] = v87[1361 - ((1342 - (96 + 13)) + 125)];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v521 = 1925 - (962 + 959);
										end
									end
								end
							elseif (v88 <= (45 + 5)) then
								local v522 = 0 + 0;
								local v523;
								while true do
									if (v522 == (1645 - (963 + 682))) then
										v523 = v87[(4 - 2) + 0];
										v85[v523](v85[v523 + (1505 - (504 + 1000))]);
										break;
									end
								end
							elseif (v88 == 51) then
								v85[v87[2 + 0]] = v85[v87[3 + 0]][v87[1 + 3]];
							else
								local v751 = 0 - 0;
								local v752;
								local v753;
								while true do
									if (v751 == (8 + 1 + 0)) then
										v87 = v75[v79];
										v85[v87[2]]();
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2]] = v87[(1353 - (461 + 890)) + 1];
										break;
									end
									if (v751 == 8) then
										v85[v87[(135 + 49) - (156 + 26)]] = v66[v87[2 + 1]];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[166 - (149 + (58 - 43))]] = v85[v87[963 - (890 + 70)]][v87[121 - (39 + (321 - (19 + 224)))]];
										v79 = v79 + (483 - (14 + 468));
										v751 = 19 - (10 + 0);
									end
									if ((v751 == (19 - 12)) or (2299 < 856)) then
										v87 = v75[v79];
										v753 = v87[2 + 0];
										v85[v753](v13(v85, v753 + (199 - (37 + 161)) + 0 + 0, v87[1 + 1 + 1]));
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v751 = 3 + 5;
									end
									if (v751 == 2) then
										v87 = v75[v79];
										v85[v87[2]] = v87[5 - 2];
										v79 = v79 + 1;
										v87 = v75[v79];
										v753 = v87[2 + 0];
										v751 = 10 - 7;
									end
									if (v751 == (1 + 2)) then
										v85[v753] = v85[v753](v13(v85, v753 + 1, v87[54 - (12 + 39)]));
										v79 = v79 + 1 + 0 + (61 - (60 + 1));
										v87 = v75[v79];
										v85[v87[5 - 3]] = v66[v87[3]];
										v79 = v79 + (3 - 2);
										v751 = 2 + 2;
									end
									if (v751 == (3 + 1)) then
										v87 = v75[v79];
										v85[v87[4 - 2]] = v85[v87[2 + 1]][v87[4]];
										v79 = v79 + ((927 - (826 + 97)) - (3 + 0));
										v87 = v75[v79];
										v85[v87[(6153 - 4441) - (1596 + 114)]] = v85[v87[7 - (7 - 3)]][v87[4]];
										v751 = 718 - ((849 - (375 + 310)) + 549);
									end
									if (v751 == (1438 - (1059 + 379))) then
										v752 = nil;
										v753 = nil;
										v85[v87[(2001 - (1864 + 135)) - 0]] = v65[v87[(4 - 2) + 1]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v751 = 393 - (145 + 247);
									end
									if ((1 + 0) == v751) then
										v753 = v87[1 + 1 + 0];
										v752 = v85[v87[8 - 5]];
										v85[v753 + 1 + 0 + 0] = v752;
										v85[v753] = v752[v87[4]];
										v79 = v79 + 1;
										v751 = 2 + 0;
									end
									if ((5 == v751) or (1388 == 108)) then
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2 - 0]] = v85[v87[723 - (254 + 466)]][v87[(1385 - 821) - (544 + (1147 - (314 + 817)))]];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v751 = (360 + 274) - (294 + 334);
									end
									if ((4173 > 2502) and ((259 - (236 + 17)) == v751)) then
										v85[v87[1 + 1]] = v85[v87[3]][v87[4 + 0]];
										v79 = v79 + (3 - 2);
										v87 = v75[v79];
										v85[v87[9 - 7]] = v87[2 + (215 - (32 + 182))];
										v79 = v79 + 1 + 0;
										v751 = 801 - (413 + 381);
									end
								end
							end
						elseif (v88 <= (3 + 58)) then
							if (v88 <= (118 - 62)) then
								if (v88 <= ((103 + 36) - 85)) then
									if (v88 > 53) then
										local v524;
										local v525;
										local v524, v526;
										local v527;
										local v528;
										v85[v87[1972 - (582 + 1388)]] = v66[v87[4 - 1]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v528 = v87[366 - (326 + 38)];
										v527 = v85[v87[8 - 5]];
										v85[v528 + (1 - 0)] = v527;
										v85[v528] = v527[v87[624 - (47 + 573)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v528 = v87[8 - 6];
										v524, v526 = v78(v85[v528](v85[v528 + (1 - 0)]));
										v80 = (v526 + v528) - (1665 - ((4435 - 3166) + 395));
										v525 = 492 - (76 + 416);
										for v676 = v528, v80 do
											local v677 = 443 - ((384 - (39 + 26)) + 124);
											while true do
												if (v677 == (0 - 0)) then
													v525 = v525 + ((1152 - (54 + 90)) - (564 + 443));
													v85[v676] = v524[v525];
													break;
												end
											end
										end
										v79 = v79 + 1;
										v87 = v75[v79];
										v528 = v87[5 - 3];
										v524 = {v85[v528](v13(v85, v528 + (2 - 1), v80))};
										v525 = 0 - 0;
										for v678 = v528, v87[1915 - (1261 + 650)] do
											v525 = v525 + (199 - (45 + 153)) + 0;
											v85[v678] = v524[v525];
										end
										v79 = v79 + (1 - (0 + 0));
										v87 = v75[v79];
										v79 = v87[3];
									else
										local v540;
										v85[v87[1819 - (772 + 1045)]] = v87[1 + 2];
										v79 = v79 + (145 - ((654 - (457 + 95)) + 42));
										v87 = v75[v79];
										v540 = v87[1846 - (1524 + 320)];
										v85[v540] = v85[v540](v13(v85, v540 + (1271 - (1049 + 221)), v87[159 - (18 + 138)]));
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[1104 - (67 + 1035)]][v87[351 - (136 + 212)]] = v85[v87[(16 + 0) - 12]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2 + 0]][v87[(6 - 3) + 0]] = v85[v87[1608 - (240 + 1364)]];
										v79 = v79 + (1083 - (1050 + 32));
										v87 = v75[v79];
										v85[v87[7 - 5]] = v66[v87[2 + 1]];
										v79 = v79 + (1056 - ((799 - 468) + 724));
										v87 = v75[v79];
										v85[v87[1 + 1]] = v85[v87[647 - (269 + 375)]][v87[4]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[727 - (267 + (1655 - 1197))]] = v87[1 + 2];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v540 = v87[820 - (667 + 151)];
										v85[v540] = v85[v540](v85[v540 + (1498 - (1410 + 39 + 48))]);
										v79 = v79 + (1898 - ((5186 - 3682) + 393));
										v87 = v75[v79];
										v85[v87[5 - 3]] = v66[v87[7 - 4]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[(2408 - 1610) - (461 + 335)]] = v85[v87[1 + 2]][v87[1765 - (1730 + 31)]];
									end
								elseif ((v88 == (1722 - ((1476 - (485 + 263)) + 939))) or (851 >= 2726)) then
									local v560;
									local v561;
									local v560, v562;
									local v563;
									local v564;
									v85[v87[6 - 4]] = v66[v87[5 - 2]];
									v79 = v79 + ((709 - (575 + 132)) - 1);
									v87 = v75[v79];
									v85[v87[1070 - (138 + 930)]] = v66[v87[3 + 0]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v564 = v87[2 + 0];
									v563 = v85[v87[3 + 0]];
									v85[v564 + 1] = v563;
									v85[v564] = v563[v87[16 - 12]];
									v79 = v79 + (1767 - ((1320 - (750 + 111)) + 1307));
									v87 = v75[v79];
									v564 = v87[1872 - (474 + 1396)];
									v560, v562 = v78(v85[v564](v85[v564 + (1 - 0)]));
									v80 = (v562 + v564) - ((1011 - (445 + 565)) + 0);
									v561 = 0 + 0;
									for v681 = v564, v80 do
										v561 = v561 + (2 - 1);
										v85[v681] = v560[v561];
									end
									v79 = v79 + 1;
									v87 = v75[v79];
									v564 = v87[1 + 1 + 0];
									v560 = {v85[v564](v13(v85, v564 + (3 - 2), v80))};
									v561 = 0 - 0;
									for v684 = v564, v87[4] do
										v561 = v561 + (592 - (562 + 29));
										v85[v684] = v560[v561];
									end
									v79 = v79 + 1;
									v87 = v75[v79];
									v79 = v87[1 + 2 + 0];
								elseif (not v85[v87[1421 - (374 + 1045)]] or (3464 < 233)) then
									v79 = v79 + 1;
								else
									v79 = v87[3 + 0];
								end
							elseif (v88 <= (179 - 121)) then
								if (v88 == (695 - (448 + 190))) then
									local v578;
									local v579;
									v85[v87[(1 - 0) + 1]] = v85[v87[2 + 1]][v87[2 + 1 + 1]];
									v79 = v79 + (3 - 2);
									v87 = v75[v79];
									v85[v87[5 - 3]] = v87[1497 - ((1617 - (189 + 121)) + 187)];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[7 - (2 + 3)]] = v87[6 - 3];
									v79 = v79 + ((1349 - (634 + 713)) - 1);
									v87 = v75[v79];
									v85[v87[685 - (232 + 451)]] = v87[3 + 0];
									v79 = v79 + 1;
									v87 = v75[v79];
									v579 = v87[2];
									v85[v579] = v85[v579](v13(v85, v579 + 1, v87[3 + 0]));
									v79 = v79 + ((1103 - (493 + 45)) - (510 + 54));
									v87 = v75[v79];
									v85[v87[3 - (969 - (493 + 475))]][v87[39 - (13 + 23)]] = v85[v87[7 - 3]];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[2]][v87[3]] = v87[4];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[1090 - (213 + 617 + 258)]][v87[10 - 7]] = v85[v87[4]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[2 + 0]] = v66[v87[3 + (784 - (158 + 626))]];
									v79 = v79 + (1442 - (860 + 581));
									v87 = v75[v79];
									v579 = v87[7 - (3 + 2)];
									v578 = v85[v87[3 + 0]];
									v85[v579 + 1] = v578;
									v85[v579] = v578[v87[245 - (237 + 4)]];
								else
									v85[v87[4 - 2]] = v85[v87[4 - 1]] + v85[v87[9 - 5]];
								end
							elseif (v88 <= (111 - 52)) then
								local v604 = 0;
								local v605;
								local v606;
								while true do
									if (v604 == 1) then
										v85[v605 + 1] = v606;
										v85[v605] = v606[v87[1 + 3 + 0]];
										break;
									end
									if (v604 == 0) then
										v605 = v87[2 + 0];
										v606 = v85[v87[11 - 8]];
										v604 = 1 + 0;
									end
								end
							elseif (v88 == (2 + 31 + 27)) then
								local v755 = 1426 - (85 + 1341);
								while true do
									if (v755 == (4 - 1)) then
										v85[v87[2]] = v85[v87[3]][v87[11 - 7]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v755 = 4;
									end
									if ((1 == v755) or (394 < 252)) then
										v85[v87[(1465 - (1035 + 56)) - (45 + 327)]] = v66[v87[3]];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v755 = 2;
									end
									if ((v755 == ((1461 - (114 + 845)) - (444 + 58))) or (3687 == 745)) then
										v85[v87[2]] = v85[v87[2 + 1]][v87[1 + 3]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v755 = 2 - 1;
									end
									if (v755 == (1734 - (64 + 1668))) then
										v85[v87[1975 - (478 + 749 + 746)]] = v85[v87[9 - (15 - 9)]][v87[6 - 2]];
										v79 = v79 + (495 - (415 + 79));
										v87 = v75[v79];
										v755 = 1 + 2;
									end
									if (v755 == (495 - (142 + 349))) then
										if ((v85[v87[1 + 1]] == v85[v87[5 - 1]]) or (2980 <= 2550)) then
											v79 = v79 + 1 + 0;
										else
											v79 = v87[3 + 0];
										end
										break;
									end
								end
							else
								local v756 = 0;
								local v757;
								local v758;
								local v759;
								local v760;
								local v761;
								while true do
									if (v756 == (15 - 9)) then
										v761 = v87[(1569 + 297) - (1710 + 154)];
										v757 = {v85[v761](v13(v85, v761 + 1 + 0, v80))};
										v758 = 0 - 0;
										for v1362 = v761, v87[5 - 1] do
											local v1363 = 0 + 0;
											while true do
												if ((844 <= 3417) and (v1363 == (0 + 0))) then
													v758 = v758 + (1 - 0) + (878 - (827 + 51));
													v85[v1362] = v757[v758];
													break;
												end
											end
										end
										v756 = 2 + 5;
									end
									if (v756 == (10 - 5)) then
										v758 = 0 - 0;
										for v1364 = v761, v80 do
											v758 = v758 + 1;
											v85[v1364] = v757[v758];
										end
										v79 = v79 + 1;
										v87 = v75[v79];
										v756 = 6;
									end
									if (v756 == (1257 - (363 + 887))) then
										v79 = v79 + 1;
										v87 = v75[v79];
										v79 = v87[5 - 2];
										break;
									end
									if (v756 == (9 - 7)) then
										v85[v87[1 + 1]] = v66[v87[6 - 3]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v761 = v87[1666 - (674 + 496 + 494)];
										v756 = 476 - (95 + 378);
									end
									if ((629 <= 3785) and (v756 == (1 + 0))) then
										v761 = nil;
										v85[v87[1 + 1]] = v66[v87[3 - 0]];
										v79 = v79 + ((77 + 979) - (507 + 548));
										v87 = v75[v79];
										v756 = 839 - (289 + 548);
									end
									if (v756 == (1818 - (821 + 997))) then
										v757 = nil;
										v758 = nil;
										v757, v759 = nil;
										v760 = nil;
										v756 = 1;
									end
									if (v756 == (259 - (195 + 60))) then
										v87 = v75[v79];
										v761 = v87[1 + 1];
										v757, v759 = v78(v85[v761](v85[v761 + 1]));
										v80 = (v759 + v761) - (1502 - (251 + 1250));
										v756 = 14 - 9;
									end
									if (v756 == (3 + 0)) then
										v760 = v85[v87[1035 - (809 + 223)]];
										v85[v761 + (1 - (0 - 0))] = v760;
										v85[v761] = v760[v87[11 - 7]];
										v79 = v79 + (3 - 2);
										v756 = 4;
									end
								end
							end
						elseif (v88 <= (43 + 5 + 17)) then
							if (v88 <= ((1044 - (334 + 677)) + 30)) then
								if (v88 > (679 - (14 + 603))) then
									local v607 = 129 - (118 + 11);
									local v608;
									local v609;
									while true do
										if (v607 == (0 + 0)) then
											v608 = nil;
											v609 = nil;
											v85[v87[2 + 0]] = v87[3];
											v79 = v79 + (2 - 1);
											v607 = (3556 - 2606) - (551 + 398);
										end
										if (v607 == 4) then
											v79 = v79 + 1;
											v87 = v75[v79];
											v609 = v87[2 + (1056 - (1049 + 7))];
											v608 = v85[v87[2 + 1]];
											v607 = 5 + 0;
										end
										if (v607 == 2) then
											v87 = v75[v79];
											v85[v87[2]][v87[3]] = v85[v87[14 - 10]];
											v79 = v79 + (2 - 1);
											v87 = v75[v79];
											v607 = 1 + 2;
										end
										if (v607 == (19 - 14)) then
											v85[v609 + 1 + 0] = v608;
											v85[v609] = v608[v87[93 - (40 + 49)]];
											break;
										end
										if ((2727 >= 2391) and (v607 == 3)) then
											v85[v87[2]][v87[11 - 8]] = v85[v87[494 - (99 + 391)]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v85[v87[8 - 6]] = v85[v87[7 - 4]][v87[4]];
											v607 = 4 + (0 - 0);
										end
										if (v607 == (2 - 1)) then
											v87 = v75[v79];
											v609 = v87[2];
											v85[v609] = v85[v609](v13(v85, v609 + (1 - 0), v87[3]));
											v79 = v79 + (1605 - (1032 + 572));
											v607 = 419 - (203 + 214);
										end
									end
								else
									local v610;
									v610 = v87[1819 - (568 + 1249)];
									v85[v610] = v85[v610](v13(v85, v610 + 1 + 0, v87[6 - 3]));
									v79 = v79 + (3 - 2);
									v87 = v75[v79];
									v85[v87[1308 - (913 + 393)]][v87[(3 + 5) - 5]] = v85[v87[5 - 1]];
									v79 = v79 + (411 - ((721 - 452) + (282 - 141)));
									v87 = v75[v79];
									v85[v87[1 + 1]] = v66[v87[6 - 3]];
									v79 = v79 + (1982 - (362 + 1619));
									v87 = v75[v79];
									v85[v87[2]] = v85[v87[1628 - (950 + 675)]][v87[2 + 2]];
									v79 = v79 + (1180 - (216 + 963));
									v87 = v75[v79];
									v85[v87[1289 - (485 + 802)]] = v87[562 - (432 + 127)];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1075 - ((2485 - (1004 + 416)) + 8)]] = v87[2 + 1];
									v79 = v79 + (1602 - (635 + 966));
									v87 = v75[v79];
									v85[v87[2 + (1957 - (1621 + 336))]] = v87[45 - (5 + 37)];
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[1 + 1]] = v87[4 - 1];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v610 = v87[3 - 1];
									v85[v610] = v85[v610](v13(v85, v610 + (3 - 2), v87[5 - (1941 - (337 + 1602))]));
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[2 + 0]][v87[3]] = v85[v87[4]];
								end
							elseif ((v88 == (593 - (318 + 211))) or (3983 == 1319)) then
								local v630 = 0 - 0;
								while true do
									if (v630 == (1589 - (963 + 624))) then
										v85[v87[1 + 1]] = v66[v87[849 - ((2035 - (1014 + 503)) + 328)]];
										v79 = v79 + ((1017 - (446 + 569)) - 1);
										v87 = v75[v79];
										v630 = 3 - 0;
									end
									if ((1583 < 3414) and ((322 - (301 + 16)) == v630)) then
										if (v85[v87[5 - 3]] == v85[v87[(1 + 10) - 7]]) then
											v79 = v79 + (2 - 1);
										else
											v79 = v87[3 + 0];
										end
										break;
									end
									if (v630 == 4) then
										v85[v87[2 + 0]] = v85[v87[5 - 2]][v87[3 + 1]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v630 = 1 + 4;
									end
									if (v630 == (9 - 6)) then
										v85[v87[1 + 1]] = v85[v87[1022 - (829 + (557 - 367))]][v87[4]];
										v79 = v79 + (3 - 2);
										v87 = v75[v79];
										v630 = 4;
									end
									if ((224 <= 3181) and (v630 == (0 - 0))) then
										v85[v87[1 + 1]] = v65[v87[3]];
										v79 = v79 + 1;
										v87 = v75[v79];
										v630 = 1;
									end
									if (v630 == ((1 - 0) - 0)) then
										v85[v87[4 - 2]] = v85[v87[1 + 2]][v87[2 + 2]];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v630 = 2 + 0;
									end
								end
							else
								local v631;
								v85[v87[615 - (520 + 2 + 91)]] = v85[v87[3]][v87[280 - (259 + (522 - (223 + 282)))]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[2]] = v87[2 + 1];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2]] = v87[3];
								v79 = v79 + (3 - 2);
								v87 = v75[v79];
								v85[v87[593 - (396 + 6 + 189)]] = v87[8 - 5];
								v79 = v79 + 1;
								v87 = v75[v79];
								v631 = v87[2];
								v85[v631] = v85[v631](v13(v85, v631 + (1762 - (440 + 1321)), v87[1832 - (1059 + 770)]));
								v79 = v79 + (4 - 3);
								v87 = v75[v79];
								v85[v87[547 - (424 + 121)]][v87[1 + 2]] = v85[v87[1351 - ((1020 - 379) + 706)]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[442 - (249 + 191)]][v87[13 - (14 - 4)]] = v87[674 - (623 + 47)];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[7 - 5]] = v66[v87[3]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[429 - (183 + 244)]] = v85[v87[1 + 2]][v87[49 - (32 + 13)]];
								v79 = v79 + (731 - (434 + 166 + 130));
								v87 = v75[v79];
								v85[v87[5 - 3]] = v87[515 - (138 + 31 + 343)];
							end
						elseif (v88 <= (59 + 8)) then
							if ((3759 > 1307) and (v88 > (115 - (1850 - (1070 + 731))))) then
								local v652;
								v85[v87[5 - 3]] = v85[v87[3 + 0]][v87[4]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[5 - 3]] = v85[v87[1126 - (651 + 472)]][v87[4 + 0]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[2 - 0]] = v66[v87[486 - (397 + 86)]];
								v79 = v79 + (877 - (423 + 453));
								v87 = v75[v79];
								v85[v87[1 + 0 + 1]] = v85[v87[1 + 2]][v87[4 + 0]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[2 + 0]] = v85[v87[3]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v652 = v87[1192 - (50 + (2544 - (1257 + 147)))];
								v85[v652] = v85[v652](v85[v652 + 1 + 0]);
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[1 + 1]][v87[3]] = v85[v87[5 - 1]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2 + 0]] = v87[599 - (63 + 94 + 439)];
							else
								local v668 = 0 - 0;
								local v669;
								while true do
									if (v668 == (6 - 4)) then
										v85[v87[5 - 3]][v87[921 - (782 + 136)]] = v85[v87[4]];
										v79 = v79 + (856 - (112 + 743));
										v87 = v75[v79];
										v85[v87[1173 - (1026 + 145)]][v87[1 + 2]] = v85[v87[722 - (493 + (430 - 205))]];
										v668 = 11 - (141 - (98 + 35));
									end
									if (v668 == (2 + 1)) then
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v85[v87[1 + 1]] = v87[3] ~= ((0 + 0) - 0);
										break;
									end
									if (v668 == 1) then
										v669 = v87[1 + 1];
										v85[v669] = v85[v669](v13(v85, v669 + 1, v87[4 - (3 - 2)]));
										v79 = v79 + (1596 - (210 + (4660 - 3275)));
										v87 = v75[v79];
										v668 = 1691 - (1201 + 488);
									end
									if (v668 == (0 + 0)) then
										v669 = nil;
										v85[v87[2 - 0]] = v87[(5 + 0) - 2];
										v79 = v79 + (586 - (352 + 233));
										v87 = v75[v79];
										v668 = 2 - 1;
									end
								end
							end
						elseif (v88 <= 68) then
							v85[v87[2 + 0]] = v66[v87[(8 + 0) - 5]];
						elseif ((v88 > (643 - (215 + 274 + 85))) or (1296 >= 1776)) then
							local v762;
							v762 = v87[1503 - (277 + 1224)];
							v85[v762](v13(v85, v762 + (1494 - (663 + 830)), v87[3 + 0]));
							v79 = v79 + (2 - 1);
							v87 = v75[v79];
							v85[v87[(1434 - (395 + 162)) - (461 + 414)]] = v66[v87[1 + 2]];
							v79 = v79 + 1 + 0 + 0;
							v87 = v75[v79];
							v85[v87[(1942 - (816 + 1125)) + 1]] = v85[v87[3]][v87[4 + 0]];
							v79 = v79 + (251 - (172 + 78));
							v87 = v75[v79];
							v85[v87[2]] = v87[4 - 1];
							v79 = v79 + 1 + (0 - 0);
							v87 = v75[v79];
							v762 = v87[2 - 0];
							v85[v762] = v85[v762](v85[v762 + 1]);
							v79 = v79 + 1 + (1148 - (701 + 447));
							v87 = v75[v79];
							v85[v87[1 + 1]] = v66[v87[4 - 1]];
							v79 = v79 + (1 - 0);
							v87 = v75[v79];
							v85[v87[(1 - 0) + 1]] = v85[v87[2 + 1]][v87[2 + 2]];
							v79 = v79 + ((4 - 1) - 2);
							v87 = v75[v79];
							v85[v87[4 - 2]] = v87[1 + 2];
							v79 = v79 + 1;
							v87 = v75[v79];
							v85[v87[2 + 0]] = v87[3];
							v79 = v79 + (448 - (133 + 314));
							v87 = v75[v79];
							v85[v87[1 + 1]] = v87[216 - (199 + 14)];
						else
							local v782 = (1341 - (391 + 950)) - 0;
							local v783;
							while true do
								if ((v782 == (1549 - (647 + 902))) or (1232 >= 3257)) then
									v783 = nil;
									v783 = v87[2];
									v85[v783] = v85[v783](v13(v85, v783 + (2 - 1), v87[3]));
									v79 = v79 + (234 - ((229 - 144) + 148));
									v782 = 1290 - (426 + 863);
								end
								if (v782 == (9 - 7)) then
									v85[v87[1656 - (873 + 781)]] = v66[v87[3 - 0]];
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[2]] = v85[v87[2 + 1]][v87[14 - 10]];
									v782 = 3 - 0;
								end
								if ((8 - 5) == v782) then
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1949 - (414 + 1533)]] = v87[3 + 0];
									v79 = v79 + (556 - (443 + 112));
									v782 = 1483 - (888 + 591);
								end
								if (v782 == (12 - 7)) then
									v85[v87[4 - 2]] = v87[1 + 2];
									v79 = v79 + 1;
									v87 = v75[v79];
									v783 = v87[7 - 5];
									v782 = 3 + 3;
								end
								if ((4 + 3) == v782) then
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + (2 - 1)]][v87[5 - 2]] = v87[6 - 2];
									break;
								end
								if (v782 == (1679 - (136 + 1542))) then
									v87 = v75[v79];
									v85[v87[6 - 4]][v87[3 + 0]] = v85[v87[5 - (1 + 0)]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v782 = 488 - (68 + 244 + 174);
								end
								if ((1091 < 2429) and (v782 == 4)) then
									v87 = v75[v79];
									v85[v87[7 - 5]] = v87[8 - 5];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v782 = 5 + 0;
								end
								if (v782 == 6) then
									v85[v783] = v85[v783](v13(v85, v783 + (1093 - (770 + 322)), v87[1 + 2]));
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1]][v87[1 + 2]] = v85[v87[5 - 1]];
									v782 = (1535 - (251 + 1271)) - 6;
								end
							end
						end
						v79 = v79 + (2 - 1);
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
